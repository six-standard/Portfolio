{"version":3,"file":"component---src-pages-index-jsx-714443143f93a12e9022.js","mappings":"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","sources":["webpack://portfolio/./src/images/sample.svg","webpack://portfolio/./src/images/email.svg","webpack://portfolio/../src/image-utils.ts","webpack://portfolio/../src/components/hooks.ts","webpack://portfolio/../src/components/layout-wrapper.tsx","webpack://portfolio/../src/components/picture.tsx","webpack://portfolio/../src/components/placeholder.tsx","webpack://portfolio/../src/components/main-image.tsx","webpack://portfolio/../src/components/gatsby-image.server.tsx","webpack://portfolio/../src/components/gatsby-image.browser.tsx","webpack://portfolio/../src/components/static-image.server.tsx","webpack://portfolio/../src/components/static-image.tsx","webpack://portfolio/./src/images/velogdashboard.svg","webpack://portfolio/./src/images/linkedin.svg","webpack://portfolio/./src/images/moon.svg","webpack://portfolio/./src/images/sun.svg","webpack://portfolio/./src/images/github.svg","webpack://portfolio/./src/images/velog.svg","webpack://portfolio/./src/images/repo.svg","webpack://portfolio/./node_modules/.pnpm/camelcase@6.3.0/node_modules/camelcase/index.js","webpack://portfolio/./src/components/portfolio/Contacts.jsx","webpack://portfolio/./src/components/portfolio/Introduce.jsx","webpack://portfolio/./src/components/TwoWayLayout.jsx","webpack://portfolio/./src/components/portfolio/Project.jsx","webpack://portfolio/./src/components/portfolio/Section.jsx","webpack://portfolio/./src/components/List.jsx","webpack://portfolio/./src/components/portfolio/Skillset.jsx","webpack://portfolio/./src/components/Layout.jsx","webpack://portfolio/./src/pages/index.jsx"],"sourcesContent":["var React = require('react');\n\nfunction Sample (props) {\n    return React.createElement(\"svg\",props,React.createElement(\"path\",{\"d\":\"M4.25 0V1.7H5.1V13.6C5.1 14.5017 5.45821 15.3665 6.09584 16.0042C6.73346 16.6418 7.59826 17 8.5 17C9.40174 17 10.2665 16.6418 10.9042 16.0042C11.5418 15.3665 11.9 14.5017 11.9 13.6V1.7H12.75V0H4.25ZM7.65 11.9C7.14 11.9 6.8 11.56 6.8 11.05C6.8 10.54 7.14 10.2 7.65 10.2C8.16 10.2 8.5 10.54 8.5 11.05C8.5 11.56 8.16 11.9 7.65 11.9ZM9.35 8.5C8.84 8.5 8.5 8.16 8.5 7.65C8.5 7.14 8.84 6.8 9.35 6.8C9.86 6.8 10.2 7.14 10.2 7.65C10.2 8.16 9.86 8.5 9.35 8.5ZM10.2 4.25H6.8V1.7H10.2V4.25Z\",\"fill\":\"black\"}));\n}\n\nSample.defaultProps = {\"width\":\"17\",\"height\":\"17\",\"viewBox\":\"0 0 17 17\",\"fill\":\"none\"};\n\nmodule.exports = Sample;\n\nSample.default = Sample;\n","var React = require('react');\n\nfunction Email (props) {\n    return React.createElement(\"svg\",props,React.createElement(\"path\",{\"d\":\"M15.3 0H1.7C0.765 0 0.00849999 0.765 0.00849999 1.7L0 11.9C0 12.835 0.765 13.6 1.7 13.6H15.3C16.235 13.6 17 12.835 17 11.9V1.7C17 0.765 16.235 0 15.3 0ZM15.3 3.4L8.5 7.65L1.7 3.4V1.7L8.5 5.95L15.3 1.7V3.4Z\",\"fill\":\"black\"}));\n}\n\nEmail.defaultProps = {\"width\":\"17\",\"height\":\"14\",\"viewBox\":\"0 0 17 14\",\"fill\":\"none\"};\n\nmodule.exports = Email;\n\nEmail.default = Email;\n","import camelCase from \"camelcase\"\nimport type { IGatsbyImageData } from \"./index\"\n\nconst DEFAULT_PIXEL_DENSITIES = [0.25, 0.5, 1, 2]\nexport const DEFAULT_BREAKPOINTS = [750, 1080, 1366, 1920]\nexport const EVERY_BREAKPOINT = [\n  320, 654, 768, 1024, 1366, 1600, 1920, 2048, 2560, 3440, 3840, 4096,\n]\nconst DEFAULT_FLUID_WIDTH = 800\nconst DEFAULT_FIXED_WIDTH = 800\nconst DEFAULT_ASPECT_RATIO = 4 / 3\n\nexport type Fit = \"cover\" | \"fill\" | \"inside\" | \"outside\" | \"contain\"\n\nexport type Layout = \"fixed\" | \"fullWidth\" | \"constrained\"\nexport type ImageFormat = \"jpg\" | \"png\" | \"webp\" | \"avif\" | \"auto\" | \"\"\n\n/**\n * The minimal required reporter, as we don't want to import it from gatsby-cli\n */\nexport interface IReporter {\n  warn(message: string): void\n}\n\nexport interface ISharpGatsbyImageArgs {\n  layout?: Layout\n  formats?: Array<ImageFormat>\n  placeholder?: \"tracedSVG\" | \"dominantColor\" | \"blurred\" | \"none\"\n  tracedSVGOptions?: Record<string, unknown>\n  width?: number\n  height?: number\n  aspectRatio?: number\n  sizes?: string\n  quality?: number\n  transformOptions?: {\n    fit?: Fit\n    cropFocus?: number | string\n    duotone?: {\n      highlight: string\n      shadow: string\n      opacity?: number\n    }\n    grayscale?: boolean\n    rotate?: number\n    trim?: number\n  }\n  jpgOptions?: Record<string, unknown>\n  pngOptions?: Record<string, unknown>\n  webpOptions?: Record<string, unknown>\n  avifOptions?: Record<string, unknown>\n  blurredOptions?: { width?: number; toFormat?: ImageFormat }\n  breakpoints?: Array<number>\n  outputPixelDensities?: Array<number>\n  backgroundColor?: string\n}\n\nexport interface IImageSizeArgs {\n  width?: number\n  height?: number\n  layout?: Layout\n  filename: string\n  outputPixelDensities?: Array<number>\n  breakpoints?: Array<number>\n  fit?: Fit\n  reporter?: IReporter\n  sourceMetadata: { width: number; height: number }\n}\n\nexport interface IImageSizes {\n  sizes: Array<number>\n  presentationWidth: number\n  presentationHeight: number\n  aspectRatio: number\n  unscaledWidth: number\n}\n\nexport interface IImage {\n  src: string\n  width: number\n  height: number\n  format: ImageFormat\n}\n\nexport interface IGatsbyImageHelperArgs {\n  pluginName: string\n  generateImageSource: (\n    filename: string,\n    width: number,\n    height: number,\n    format: ImageFormat,\n    fit?: Fit,\n    options?: Record<string, unknown>\n  ) => IImage\n  layout?: Layout\n  formats?: Array<ImageFormat>\n  filename: string\n  placeholderURL?: string\n  width?: number\n  height?: number\n  sizes?: string\n  reporter?: IReporter\n  sourceMetadata?: { width: number; height: number; format: ImageFormat }\n  fit?: Fit\n  options?: Record<string, unknown>\n  breakpoints?: Array<number>\n  backgroundColor?: string\n  aspectRatio?: number\n}\n\nconst warn = (message: string): void => console.warn(message)\n\nconst sortNumeric = (a: number, b: number): number => a - b\n\nexport const getSizes = (width: number, layout: Layout): string | undefined => {\n  switch (layout) {\n    // If screen is wider than the max size, image width is the max size,\n    // otherwise it's the width of the screen\n    case `constrained`:\n      return `(min-width: ${width}px) ${width}px, 100vw`\n\n    // Image is always the same width, whatever the size of the screen\n    case `fixed`:\n      return `${width}px`\n\n    // Image is always the width of the screen\n    case `fullWidth`:\n      return `100vw`\n\n    default:\n      return undefined\n  }\n}\n\nexport const getSrcSet = (images: Array<IImage>): string =>\n  images.map(image => `${image.src} ${image.width}w`).join(`,\\n`)\n\nexport function formatFromFilename(filename: string): ImageFormat | undefined {\n  const dot = filename.lastIndexOf(`.`)\n  if (dot !== -1) {\n    const ext = filename.slice(dot + 1)\n    if (ext === `jpeg`) {\n      return `jpg`\n    }\n    if (ext.length === 3 || ext.length === 4) {\n      return ext as ImageFormat\n    }\n  }\n  return undefined\n}\n\nexport function setDefaultDimensions(\n  args: IGatsbyImageHelperArgs\n): IGatsbyImageHelperArgs {\n  let {\n    layout = `constrained`,\n    width,\n    height,\n    sourceMetadata,\n    breakpoints,\n    aspectRatio,\n    formats = [`auto`, `webp`],\n  } = args\n  formats = formats.map(format => format.toLowerCase() as ImageFormat)\n  layout = camelCase(layout) as Layout\n\n  if (width && height) {\n    return { ...args, formats, layout, aspectRatio: width / height }\n  }\n  if (sourceMetadata.width && sourceMetadata.height && !aspectRatio) {\n    aspectRatio = sourceMetadata.width / sourceMetadata.height\n  }\n\n  if (layout === `fullWidth`) {\n    width = width || sourceMetadata.width || breakpoints[breakpoints.length - 1]\n    height = height || Math.round(width / (aspectRatio || DEFAULT_ASPECT_RATIO))\n  } else {\n    if (!width) {\n      if (height && aspectRatio) {\n        width = height * aspectRatio\n      } else if (sourceMetadata.width) {\n        width = sourceMetadata.width\n      } else if (height) {\n        width = Math.round(height / DEFAULT_ASPECT_RATIO)\n      } else {\n        width = DEFAULT_FIXED_WIDTH\n      }\n    }\n\n    if (aspectRatio && !height) {\n      height = Math.round(width / aspectRatio)\n    } else if (!aspectRatio) {\n      aspectRatio = width / height\n    }\n  }\n  return { ...args, width, height, aspectRatio, layout, formats }\n}\n\n/**\n * Use this for getting an image for the blurred placeholder. This ensures the\n * aspect ratio and crop match the main image\n */\nexport function getLowResolutionImageURL(\n  args: IGatsbyImageHelperArgs,\n  width = 20\n): string {\n  args = setDefaultDimensions(args)\n  const { generateImageSource, filename, aspectRatio } = args\n  return generateImageSource(\n    filename,\n    width,\n    Math.round(width / aspectRatio),\n    args.sourceMetadata.format || `jpg`,\n    args.fit,\n    args.options\n  )?.src\n}\n\nexport function generateImageData(\n  args: IGatsbyImageHelperArgs\n): IGatsbyImageData {\n  args = setDefaultDimensions(args)\n\n  let {\n    pluginName,\n    sourceMetadata,\n    generateImageSource,\n    layout,\n    fit,\n    options,\n    width,\n    height,\n    filename,\n    reporter = { warn },\n    backgroundColor,\n    placeholderURL,\n  } = args\n\n  if (!pluginName) {\n    reporter.warn(\n      `[gatsby-plugin-image] \"generateImageData\" was not passed a plugin name`\n    )\n  }\n\n  if (typeof generateImageSource !== `function`) {\n    throw new Error(`generateImageSource must be a function`)\n  }\n\n  if (!sourceMetadata || (!sourceMetadata.width && !sourceMetadata.height)) {\n    // No metadata means we let the CDN handle max size etc, aspect ratio etc\n    sourceMetadata = {\n      width,\n      height,\n      format: sourceMetadata?.format || formatFromFilename(filename) || `auto`,\n    }\n  } else if (!sourceMetadata.format) {\n    sourceMetadata.format = formatFromFilename(filename)\n  }\n\n  const formats = new Set<ImageFormat>(args.formats)\n\n  if (formats.size === 0 || formats.has(`auto`) || formats.has(``)) {\n    formats.delete(`auto`)\n    formats.delete(``)\n    formats.add(sourceMetadata.format)\n  }\n\n  if (formats.has(`jpg`) && formats.has(`png`)) {\n    reporter.warn(\n      `[${pluginName}] Specifying both 'jpg' and 'png' formats is not supported. Using 'auto' instead`\n    )\n    if (sourceMetadata.format === `jpg`) {\n      formats.delete(`png`)\n    } else {\n      formats.delete(`jpg`)\n    }\n  }\n\n  const imageSizes = calculateImageSizes({ ...args, sourceMetadata })\n\n  const result: IGatsbyImageData[\"images\"] = {\n    sources: [],\n  }\n\n  let sizes = args.sizes\n  if (!sizes) {\n    sizes = getSizes(imageSizes.presentationWidth, layout)\n  }\n\n  formats.forEach(format => {\n    const images = imageSizes.sizes\n      .map(size => {\n        const imageSrc = generateImageSource(\n          filename,\n          size,\n          Math.round(size / imageSizes.aspectRatio),\n          format,\n          fit,\n          options\n        )\n        if (\n          !imageSrc?.width ||\n          !imageSrc.height ||\n          !imageSrc.src ||\n          !imageSrc.format\n        ) {\n          reporter.warn(\n            `[${pluginName}] The resolver for image ${filename} returned an invalid value.`\n          )\n          return undefined\n        }\n        return imageSrc\n      })\n      .filter(Boolean)\n\n    if (format === `jpg` || format === `png` || format === `auto`) {\n      const unscaled =\n        images.find(img => img.width === imageSizes.unscaledWidth) || images[0]\n\n      if (unscaled) {\n        result.fallback = {\n          src: unscaled.src,\n          srcSet: getSrcSet(images),\n          sizes,\n        }\n      }\n    } else {\n      result.sources?.push({\n        srcSet: getSrcSet(images),\n        sizes,\n        type: `image/${format}`,\n      })\n    }\n  })\n\n  const imageProps: Partial<IGatsbyImageData> = {\n    images: result,\n    layout,\n    backgroundColor,\n  }\n\n  if (placeholderURL) {\n    imageProps.placeholder = { fallback: placeholderURL }\n  }\n\n  switch (layout) {\n    case `fixed`:\n      imageProps.width = imageSizes.presentationWidth\n      imageProps.height = imageSizes.presentationHeight\n      break\n\n    case `fullWidth`:\n      imageProps.width = 1\n      imageProps.height = 1 / imageSizes.aspectRatio\n      break\n\n    case `constrained`:\n      imageProps.width = args.width || imageSizes.presentationWidth || 1\n      imageProps.height = (imageProps.width || 1) / imageSizes.aspectRatio\n  }\n\n  return imageProps as IGatsbyImageData\n}\n\nconst dedupeAndSortDensities = (values: Array<number>): Array<number> =>\n  Array.from(new Set([1, ...values])).sort(sortNumeric)\n\nexport function calculateImageSizes(args: IImageSizeArgs): IImageSizes {\n  const {\n    width,\n    height,\n    filename,\n    layout = `constrained`,\n    sourceMetadata: imgDimensions,\n    reporter = { warn },\n    breakpoints = DEFAULT_BREAKPOINTS,\n  } = args\n\n  // check that all dimensions provided are positive\n  const userDimensions = { width, height }\n  const erroneousUserDimensions = Object.entries(userDimensions).filter(\n    ([_, size]) => typeof size === `number` && size < 1\n  )\n  if (erroneousUserDimensions.length) {\n    throw new Error(\n      `Specified dimensions for images must be positive numbers (> 0). Problem dimensions you have are ${erroneousUserDimensions\n        .map(dim => dim.join(`: `))\n        .join(`, `)}`\n    )\n  }\n\n  if (layout === `fixed`) {\n    return fixedImageSizes(args)\n  } else if (layout === `constrained`) {\n    return responsiveImageSizes(args)\n  } else if (layout === `fullWidth`) {\n    return responsiveImageSizes({ breakpoints, ...args })\n  } else {\n    reporter.warn(\n      `No valid layout was provided for the image at ${filename}. Valid image layouts are fixed, fullWidth, and constrained. Found ${layout}`\n    )\n    return {\n      sizes: [imgDimensions.width],\n      presentationWidth: imgDimensions.width,\n      presentationHeight: imgDimensions.height,\n      aspectRatio: imgDimensions.width / imgDimensions.height,\n      unscaledWidth: imgDimensions.width,\n    }\n  }\n}\nexport function fixedImageSizes({\n  filename,\n  sourceMetadata: imgDimensions,\n  width,\n  height,\n  fit = `cover`,\n  outputPixelDensities = DEFAULT_PIXEL_DENSITIES,\n  reporter = { warn },\n}: IImageSizeArgs): IImageSizes {\n  let aspectRatio = imgDimensions.width / imgDimensions.height\n  // Sort, dedupe and ensure there's a 1\n  const densities = dedupeAndSortDensities(outputPixelDensities)\n\n  // If both are provided then we need to check the fit\n  if (width && height) {\n    const calculated = getDimensionsAndAspectRatio(imgDimensions, {\n      width,\n      height,\n      fit,\n    })\n    width = calculated.width\n    height = calculated.height\n    aspectRatio = calculated.aspectRatio\n  }\n\n  if (!width) {\n    if (!height) {\n      width = DEFAULT_FIXED_WIDTH\n    } else {\n      width = Math.round(height * aspectRatio)\n    }\n  } else if (!height) {\n    height = Math.round(width / aspectRatio)\n  }\n\n  const originalWidth = width // will use this for presentationWidth, don't want to lose it\n  const isTopSizeOverriden =\n    imgDimensions.width < width || imgDimensions.height < (height as number)\n\n  // If the image is smaller than requested, warn the user that it's being processed as such\n  // print out this message with the necessary information before we overwrite it for sizing\n  if (isTopSizeOverriden) {\n    const fixedDimension = imgDimensions.width < width ? `width` : `height`\n    reporter.warn(`\nThe requested ${fixedDimension} \"${\n      fixedDimension === `width` ? width : height\n    }px\" for the image ${filename} was larger than the actual image ${fixedDimension} of ${\n      imgDimensions[fixedDimension]\n    }px. If possible, replace the current image with a larger one.`)\n\n    if (fixedDimension === `width`) {\n      width = imgDimensions.width\n      height = Math.round(width / aspectRatio)\n    } else {\n      height = imgDimensions.height\n      width = height * aspectRatio\n    }\n  }\n\n  const sizes = densities\n    .filter(size => size >= 1) // remove smaller densities because fixed images don't need them\n    .map(density => Math.round(density * (width as number)))\n    .filter(size => size <= imgDimensions.width)\n\n  return {\n    sizes,\n    aspectRatio,\n    presentationWidth: originalWidth,\n    presentationHeight: Math.round(originalWidth / aspectRatio),\n    unscaledWidth: width,\n  }\n}\n\nexport function responsiveImageSizes({\n  sourceMetadata: imgDimensions,\n  width,\n  height,\n  fit = `cover`,\n  outputPixelDensities = DEFAULT_PIXEL_DENSITIES,\n  breakpoints,\n  layout,\n}: IImageSizeArgs): IImageSizes {\n  let sizes\n  let aspectRatio = imgDimensions.width / imgDimensions.height\n  // Sort, dedupe and ensure there's a 1\n  const densities = dedupeAndSortDensities(outputPixelDensities)\n\n  // If both are provided then we need to check the fit\n  if (width && height) {\n    const calculated = getDimensionsAndAspectRatio(imgDimensions, {\n      width,\n      height,\n      fit,\n    })\n    width = calculated.width\n    height = calculated.height\n    aspectRatio = calculated.aspectRatio\n  }\n\n  // Case 1: width of height were passed in, make sure it isn't larger than the actual image\n  width = width && Math.min(width, imgDimensions.width)\n  height = height && Math.min(height, imgDimensions.height)\n\n  // Case 2: neither width or height were passed in, use default size\n  if (!width && !height) {\n    width = Math.min(DEFAULT_FLUID_WIDTH, imgDimensions.width)\n    height = width / aspectRatio\n  }\n\n  // if it still hasn't been found, calculate width from the derived height.\n  // TS isn't smart enough to realise the type for height has been narrowed here\n  if (!width) {\n    width = (height as number) * aspectRatio\n  }\n\n  const originalWidth = width\n  const isTopSizeOverriden =\n    imgDimensions.width < width || imgDimensions.height < (height as number)\n  if (isTopSizeOverriden) {\n    width = imgDimensions.width\n    height = imgDimensions.height\n  }\n\n  width = Math.round(width)\n\n  if (breakpoints?.length > 0) {\n    sizes = breakpoints.filter(size => size <= imgDimensions.width)\n\n    // If a larger breakpoint has been filtered-out, add the actual image width instead\n    if (\n      sizes.length < breakpoints.length &&\n      !sizes.includes(imgDimensions.width)\n    ) {\n      sizes.push(imgDimensions.width)\n    }\n  } else {\n    sizes = densities.map(density => Math.round(density * (width as number)))\n    sizes = sizes.filter(size => size <= imgDimensions.width)\n  }\n\n  // ensure that the size passed in is included in the final output\n  if (layout === `constrained` && !sizes.includes(width)) {\n    sizes.push(width)\n  }\n  sizes = sizes.sort(sortNumeric)\n  return {\n    sizes,\n    aspectRatio,\n    presentationWidth: originalWidth,\n    presentationHeight: Math.round(originalWidth / aspectRatio),\n    unscaledWidth: width,\n  }\n}\n\nexport function getDimensionsAndAspectRatio(\n  dimensions,\n  options\n): { width: number; height: number; aspectRatio: number } {\n  // Calculate the eventual width/height of the image.\n  const imageAspectRatio = dimensions.width / dimensions.height\n\n  let width = options.width\n  let height = options.height\n\n  switch (options.fit) {\n    case `fill`: {\n      width = options.width ? options.width : dimensions.width\n      height = options.height ? options.height : dimensions.height\n      break\n    }\n    case `inside`: {\n      const widthOption = options.width\n        ? options.width\n        : Number.MAX_SAFE_INTEGER\n      const heightOption = options.height\n        ? options.height\n        : Number.MAX_SAFE_INTEGER\n\n      width = Math.min(widthOption, Math.round(heightOption * imageAspectRatio))\n      height = Math.min(\n        heightOption,\n        Math.round(widthOption / imageAspectRatio)\n      )\n      break\n    }\n    case `outside`: {\n      const widthOption = options.width ? options.width : 0\n      const heightOption = options.height ? options.height : 0\n\n      width = Math.max(widthOption, Math.round(heightOption * imageAspectRatio))\n      height = Math.max(\n        heightOption,\n        Math.round(widthOption / imageAspectRatio)\n      )\n      break\n    }\n\n    default: {\n      if (options.width && !options.height) {\n        width = options.width\n        height = Math.round(options.width / imageAspectRatio)\n      }\n\n      if (options.height && !options.width) {\n        width = Math.round(options.height * imageAspectRatio)\n        height = options.height\n      }\n    }\n  }\n\n  return {\n    width,\n    height,\n    aspectRatio: width / height,\n  }\n}\n","/* global GATSBY___IMAGE */\nimport { generateImageData, EVERY_BREAKPOINT } from \"../image-utils\"\nimport type { CSSProperties, HTMLAttributes, ImgHTMLAttributes } from \"react\"\nimport type { Node } from \"gatsby\"\nimport type { PlaceholderProps } from \"./placeholder\"\nimport type { MainImageProps } from \"./main-image\"\nimport type { IGatsbyImageData } from \"./gatsby-image.browser\"\nimport type {\n  IGatsbyImageHelperArgs,\n  Layout,\n  IImage,\n  ImageFormat,\n} from \"../image-utils\"\n\n// Native lazy-loading support: https://addyosmani.com/blog/lazy-loading/\nexport const hasNativeLazyLoadSupport = (): boolean =>\n  typeof HTMLImageElement !== `undefined` &&\n  `loading` in HTMLImageElement.prototype\n\nexport function gatsbyImageIsInstalled(): boolean {\n  return typeof GATSBY___IMAGE !== `undefined` && GATSBY___IMAGE\n}\n\nexport type IGatsbyImageDataParent<T = never> = T & {\n  gatsbyImageData: IGatsbyImageData\n}\nexport type IGatsbyImageParent<T = never> = T & {\n  gatsbyImage: IGatsbyImageData\n}\nexport type FileNode = Partial<Node> & {\n  childImageSharp?: IGatsbyImageDataParent<Partial<Node>>\n}\n\nconst isGatsbyImageData = (\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  node: IGatsbyImageData | any\n): node is IGatsbyImageData =>\n  // 🦆 check for a deep prop to be sure this is a valid gatsbyImageData object\n  Boolean(node?.images?.fallback?.src)\n\nconst isGatsbyImageDataParent = <T>(\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  node: IGatsbyImageDataParent<T> | any\n): node is IGatsbyImageDataParent<T> => Boolean(node?.gatsbyImageData)\n\nconst isGatsbyImageParent = <T>(\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  node: IGatsbyImageParent<T> | any\n): node is IGatsbyImageParent<T> => Boolean(node?.gatsbyImage)\n\nexport type ImageDataLike =\n  | FileNode\n  | IGatsbyImageDataParent\n  | IGatsbyImageParent\n  | IGatsbyImageData\n\nexport const getImage = (\n  node: ImageDataLike | null\n): IGatsbyImageData | undefined => {\n  // This checks both for gatsbyImageData and gatsbyImage\n  if (isGatsbyImageData(node)) {\n    return node\n  }\n  // gatsbyImageData GraphQL field\n  if (isGatsbyImageDataParent(node)) {\n    return node.gatsbyImageData\n  }\n  // gatsbyImage GraphQL field for Gatsby's Image CDN service\n  if (isGatsbyImageParent(node)) {\n    return node.gatsbyImage\n  }\n  return node?.childImageSharp?.gatsbyImageData\n}\n\nexport const getSrc = (node: ImageDataLike): string | undefined =>\n  getImage(node)?.images?.fallback?.src\n\nexport const getSrcSet = (node: ImageDataLike): string | undefined =>\n  getImage(node)?.images?.fallback?.srcSet\n\nexport function getWrapperProps(\n  width: number,\n  height: number,\n  layout: Layout\n): Pick<HTMLAttributes<HTMLElement>, \"className\" | \"style\"> & {\n  \"data-gatsby-image-wrapper\": string\n} {\n  const wrapperStyle: CSSProperties = {}\n\n  let className = `gatsby-image-wrapper`\n\n  // If the plugin isn't installed we need to apply the styles inline\n  if (!gatsbyImageIsInstalled()) {\n    wrapperStyle.position = `relative`\n    wrapperStyle.overflow = `hidden`\n  }\n\n  if (layout === `fixed`) {\n    wrapperStyle.width = width\n    wrapperStyle.height = height\n  } else if (layout === `constrained`) {\n    if (!gatsbyImageIsInstalled()) {\n      wrapperStyle.display = `inline-block`\n      wrapperStyle.verticalAlign = `top`\n    }\n    className = `gatsby-image-wrapper gatsby-image-wrapper-constrained`\n  }\n\n  return {\n    className,\n    \"data-gatsby-image-wrapper\": ``,\n    style: wrapperStyle,\n  }\n}\n\nexport interface IUrlBuilderArgs<OptionsType> {\n  width: number\n  height: number\n  baseUrl: string\n  format: ImageFormat\n  options: OptionsType\n}\nexport interface IGetImageDataArgs<OptionsType = Record<string, unknown>> {\n  baseUrl: string\n  /**\n   * For constrained and fixed images, the size of the image element\n   */\n  width?: number\n  height?: number\n  /**\n   * If available, pass the source image width and height\n   */\n  sourceWidth?: number\n  sourceHeight?: number\n  /**\n   * If only one dimension is passed, then this will be used to calculate the other.\n   */\n  aspectRatio?: number\n  layout?: Layout\n  /**\n   * Returns a URL based on the passed arguments. Should be a pure function\n   */\n  urlBuilder: (args: IUrlBuilderArgs<OptionsType>) => string\n\n  /**\n   * Should be a data URI\n   */\n  placeholderURL?: string\n  backgroundColor?: string\n  /**\n   * Used in error messages etc\n   */\n  pluginName?: string\n\n  /**\n   * If you do not support auto-format, pass an array of image types here\n   */\n  formats?: Array<ImageFormat>\n\n  breakpoints?: Array<number>\n\n  /**\n   * Passed to the urlBuilder function\n   */\n  options?: OptionsType\n}\n\n/**\n * Use this hook to generate gatsby-plugin-image data in the browser.\n */\nexport function getImageData<OptionsType>({\n  baseUrl,\n  urlBuilder,\n  sourceWidth,\n  sourceHeight,\n  pluginName = `getImageData`,\n  formats = [`auto`],\n  breakpoints,\n  options,\n  ...props\n}: IGetImageDataArgs<OptionsType>): IGatsbyImageData {\n  if (\n    !breakpoints?.length &&\n    (props.layout === `fullWidth` || (props.layout as string) === `FULL_WIDTH`)\n  ) {\n    breakpoints = EVERY_BREAKPOINT\n  }\n  const generateImageSource = (\n    baseUrl: string,\n    width: number,\n    height?: number,\n    format?: ImageFormat\n  ): IImage => {\n    return {\n      width,\n      height,\n      format,\n      src: urlBuilder({ baseUrl, width, height, options, format }),\n    }\n  }\n\n  const sourceMetadata: IGatsbyImageHelperArgs[\"sourceMetadata\"] = {\n    width: sourceWidth,\n    height: sourceHeight,\n    format: `auto`,\n  }\n\n  const args: IGatsbyImageHelperArgs = {\n    ...props,\n    pluginName,\n    generateImageSource,\n    filename: baseUrl,\n    formats,\n    breakpoints,\n    sourceMetadata,\n  }\n  return generateImageData(args)\n}\n\nexport function getMainProps(\n  isLoading: boolean,\n  isLoaded: boolean,\n  images: IGatsbyImageData[\"images\"],\n  loading?: \"eager\" | \"lazy\",\n  style: CSSProperties = {}\n): Partial<MainImageProps> {\n  // fallback when it's not configured in gatsby-config.\n  if (!gatsbyImageIsInstalled()) {\n    style = {\n      height: `100%`,\n      left: 0,\n      position: `absolute`,\n      top: 0,\n      transform: `translateZ(0)`,\n      transition: `opacity 250ms linear`,\n      width: `100%`,\n      willChange: `opacity`,\n      ...style,\n    }\n  }\n\n  const result = {\n    ...images,\n    loading,\n    shouldLoad: isLoading,\n    \"data-main-image\": ``,\n    style: {\n      ...style,\n      opacity: isLoaded ? 1 : 0,\n    },\n  }\n\n  return result\n}\n\nexport type PlaceholderImageAttrs = ImgHTMLAttributes<HTMLImageElement> &\n  Pick<PlaceholderProps, \"sources\" | \"fallback\"> & {\n    \"data-placeholder-image\"?: string\n  }\n\nexport function getPlaceholderProps(\n  placeholder: PlaceholderImageAttrs | undefined,\n  isLoaded: boolean,\n  layout: Layout,\n  width?: number,\n  height?: number,\n  backgroundColor?: string,\n  objectFit?: CSSProperties[\"objectFit\"],\n  objectPosition?: CSSProperties[\"objectPosition\"]\n): PlaceholderImageAttrs {\n  const wrapperStyle: CSSProperties = {}\n\n  if (backgroundColor) {\n    wrapperStyle.backgroundColor = backgroundColor\n\n    if (layout === `fixed`) {\n      wrapperStyle.width = width\n      wrapperStyle.height = height\n      wrapperStyle.backgroundColor = backgroundColor\n      wrapperStyle.position = `relative`\n    } else if (layout === `constrained`) {\n      wrapperStyle.position = `absolute`\n      wrapperStyle.top = 0\n      wrapperStyle.left = 0\n      wrapperStyle.bottom = 0\n      wrapperStyle.right = 0\n    } else if (layout === `fullWidth`) {\n      wrapperStyle.position = `absolute`\n      wrapperStyle.top = 0\n      wrapperStyle.left = 0\n      wrapperStyle.bottom = 0\n      wrapperStyle.right = 0\n    }\n  }\n\n  if (objectFit) {\n    wrapperStyle.objectFit = objectFit\n  }\n\n  if (objectPosition) {\n    wrapperStyle.objectPosition = objectPosition\n  }\n  const result: PlaceholderImageAttrs = {\n    ...placeholder,\n    \"aria-hidden\": true,\n    \"data-placeholder-image\": ``,\n    style: {\n      opacity: isLoaded ? 0 : 1,\n      transition: `opacity 500ms linear`,\n      ...wrapperStyle,\n    },\n  }\n\n  // fallback when it's not configured in gatsby-config.\n  if (!gatsbyImageIsInstalled()) {\n    result.style = {\n      height: `100%`,\n      left: 0,\n      position: `absolute`,\n      top: 0,\n      width: `100%`,\n    }\n  }\n\n  return result\n}\n\nexport interface IArtDirectedImage {\n  media: string\n  image: IGatsbyImageData\n}\n\n/**\n * Generate a Gatsby image data object with multiple, art-directed images that display at different\n * resolutions.\n *\n * @param defaultImage The image displayed when no media query matches.\n * It is also used for all other settings applied to the image, such as width, height and layout.\n * You should pass a className to the component with media queries to adjust the size of the container,\n * as this cannot be adjusted automatically.\n * @param artDirected Array of objects which each contains a `media` string which is a media query\n * such as `(min-width: 320px)`, and the image object to use when that query matches.\n */\nexport function withArtDirection(\n  defaultImage: IGatsbyImageData,\n  artDirected: Array<IArtDirectedImage>\n): IGatsbyImageData {\n  const { images, placeholder, ...props } = defaultImage\n  const output: IGatsbyImageData = {\n    ...props,\n    images: {\n      ...images,\n      sources: [],\n    },\n    placeholder: placeholder && {\n      ...placeholder,\n      sources: [],\n    },\n  }\n\n  artDirected.forEach(({ media, image }) => {\n    if (!media) {\n      if (process.env.NODE_ENV === `development`) {\n        console.warn(\n          \"[gatsby-plugin-image] All art-directed images passed to must have a value set for `media`. Skipping.\"\n        )\n      }\n      return\n    }\n\n    if (\n      image.layout !== defaultImage.layout &&\n      process.env.NODE_ENV === `development`\n    ) {\n      console.warn(\n        `[gatsby-plugin-image] Mismatched image layout: expected \"${defaultImage.layout}\" but received \"${image.layout}\". All art-directed images use the same layout as the default image`\n      )\n    }\n\n    output.images.sources.push(\n      ...image.images.sources.map(source => {\n        return { ...source, media }\n      }),\n      {\n        media,\n        srcSet: image.images.fallback.srcSet,\n      }\n    )\n\n    if (!output.placeholder) {\n      return\n    }\n\n    output.placeholder.sources.push({\n      media,\n      srcSet: image.placeholder.fallback,\n    })\n  })\n  output.images.sources.push(...images.sources)\n  if (placeholder?.sources) {\n    output.placeholder?.sources.push(...placeholder.sources)\n  }\n  return output\n}\n","import React, { Fragment, FunctionComponent, PropsWithChildren } from \"react\"\nimport terserMacro from \"../../macros/terser.macro\"\nimport { Layout } from \"../image-utils\"\n\nexport interface ILayoutWrapperProps {\n  layout: Layout\n  width: number\n  height: number\n}\n\nconst NativeScriptLoading: FunctionComponent = () => (\n  <script\n    type=\"module\"\n    dangerouslySetInnerHTML={{\n      __html: terserMacro`\nconst hasNativeLazyLoadSupport = typeof HTMLImageElement !== \"undefined\" && \"loading\" in HTMLImageElement.prototype;\nif (hasNativeLazyLoadSupport) {\n  const gatsbyImages = document.querySelectorAll('img[data-main-image]');\n  for (let mainImage of gatsbyImages) {\n    if (mainImage.dataset.src) {\n      mainImage.setAttribute('src', mainImage.dataset.src)\n      mainImage.removeAttribute('data-src')\n    }\n    if (mainImage.dataset.srcset) {\n      mainImage.setAttribute('srcset', mainImage.dataset.srcset)\n      mainImage.removeAttribute('data-srcset')\n    }\n\n    const sources = mainImage.parentNode.querySelectorAll('source[data-srcset]');\n    for (let source of sources) {\n      source.setAttribute('srcset', source.dataset.srcset)\n      source.removeAttribute('data-srcset')\n    }\n\n    if (mainImage.complete) {\n      mainImage.style.opacity = 1;\n\n      // also hide the placeholder\n      mainImage.parentNode.parentNode.querySelector('[data-placeholder-image]').style.opacity = 0;\n    }\n  }\n}\n`,\n    }}\n  />\n)\n\nexport function getSizer(\n  layout: Layout,\n  width: number,\n  height: number\n): string {\n  let sizer = ``\n  if (layout === `fullWidth`) {\n    sizer = `<div aria-hidden=\"true\" style=\"padding-top: ${\n      (height / width) * 100\n    }%;\"></div>`\n  }\n\n  if (layout === `constrained`) {\n    sizer = `<div style=\"max-width: ${width}px; display: block;\"><img alt=\"\" role=\"presentation\" aria-hidden=\"true\" src=\"data:image/svg+xml;charset=utf-8,%3Csvg%20height='${height}'%20width='${width}'%20xmlns='http://www.w3.org/2000/svg'%20version='1.1'%3E%3C/svg%3E\" style=\"max-width: 100%; display: block; position: static;\"></div>`\n  }\n\n  return sizer\n}\n\nconst Sizer: FunctionComponent<ILayoutWrapperProps> = function Sizer({\n  layout,\n  width,\n  height,\n}) {\n  if (layout === `fullWidth`) {\n    return (\n      <div aria-hidden style={{ paddingTop: `${(height / width) * 100}%` }} />\n    )\n  }\n\n  if (layout === `constrained`) {\n    return (\n      <div style={{ maxWidth: width, display: `block` }}>\n        <img\n          alt=\"\"\n          role=\"presentation\"\n          aria-hidden=\"true\"\n          src={`data:image/svg+xml;charset=utf-8,%3Csvg%20height='${height}'%20width='${width}'%20xmlns='http://www.w3.org/2000/svg'%20version='1.1'%3E%3C/svg%3E`}\n          style={{\n            maxWidth: `100%`,\n            display: `block`,\n            position: `static`,\n          }}\n        />\n      </div>\n    )\n  }\n\n  return null\n}\n\nexport const LayoutWrapper: FunctionComponent<\n  PropsWithChildren<ILayoutWrapperProps>\n> = function LayoutWrapper({ children, ...props }) {\n  return (\n    <Fragment>\n      <Sizer {...props} />\n      {children}\n\n      {SERVER ? <NativeScriptLoading /> : null}\n    </Fragment>\n  )\n}\n","import React, { FunctionComponent, ImgHTMLAttributes } from \"react\"\nimport * as PropTypes from \"prop-types\"\n\nexport interface IResponsiveImageProps {\n  sizes?: string\n  srcSet: string\n}\n\nexport type SourceProps = IResponsiveImageProps &\n  (\n    | {\n        media: string\n        type?: string\n      }\n    | {\n        media?: string\n        type: string\n      }\n  )\n\ntype FallbackProps = { src: string } & Partial<IResponsiveImageProps>\n\ntype ImageProps = ImgHTMLAttributes<HTMLImageElement> & {\n  src: string\n  alt: string\n  shouldLoad: boolean\n}\n\nexport type PictureProps = ImgHTMLAttributes<HTMLImageElement> & {\n  fallback?: FallbackProps\n  sources?: Array<SourceProps>\n  alt: string\n  shouldLoad?: boolean\n}\n\nconst Image: FunctionComponent<ImageProps> = function Image({\n  src,\n  srcSet,\n  loading,\n  alt = ``,\n  shouldLoad,\n  ...props\n}) {\n  return (\n    <img\n      {...props}\n      decoding=\"async\"\n      loading={loading}\n      src={shouldLoad ? src : undefined}\n      data-src={!shouldLoad ? src : undefined}\n      srcSet={shouldLoad ? srcSet : undefined}\n      data-srcset={!shouldLoad ? srcSet : undefined}\n      alt={alt}\n    />\n  )\n}\n\nexport const Picture: React.FC<PictureProps> = function Picture({\n  fallback,\n  sources = [],\n  shouldLoad = true,\n  ...props\n}) {\n  const sizes = props.sizes || fallback?.sizes\n  const fallbackImage = (\n    <Image {...props} {...fallback} sizes={sizes} shouldLoad={shouldLoad} />\n  )\n\n  if (!sources.length) {\n    return fallbackImage\n  }\n\n  return (\n    <picture>\n      {sources.map(({ media, srcSet, type }) => (\n        <source\n          key={`${media}-${type}-${srcSet}`}\n          type={type}\n          media={media}\n          srcSet={shouldLoad ? srcSet : undefined}\n          data-srcset={!shouldLoad ? srcSet : undefined}\n          sizes={sizes}\n        />\n      ))}\n      {fallbackImage}\n    </picture>\n  )\n}\n\nImage.propTypes = {\n  src: PropTypes.string.isRequired,\n  alt: PropTypes.string.isRequired,\n  sizes: PropTypes.string,\n  srcSet: PropTypes.string,\n  shouldLoad: PropTypes.bool,\n}\n\nPicture.displayName = `Picture`\nPicture.propTypes = {\n  alt: PropTypes.string.isRequired,\n  shouldLoad: PropTypes.bool,\n  fallback: PropTypes.exact({\n    src: PropTypes.string.isRequired,\n    srcSet: PropTypes.string,\n    sizes: PropTypes.string,\n  }),\n  sources: PropTypes.arrayOf(\n    PropTypes.oneOfType([\n      PropTypes.exact({\n        media: PropTypes.string.isRequired,\n        type: PropTypes.string,\n        sizes: PropTypes.string,\n        srcSet: PropTypes.string.isRequired,\n      }),\n      PropTypes.exact({\n        media: PropTypes.string,\n        type: PropTypes.string.isRequired,\n        sizes: PropTypes.string,\n        srcSet: PropTypes.string.isRequired,\n      }),\n    ])\n  ),\n}\n","import React, { FunctionComponent, ImgHTMLAttributes } from \"react\"\nimport * as PropTypes from \"prop-types\"\nimport { Picture, SourceProps } from \"./picture\"\n\nexport type PlaceholderProps = ImgHTMLAttributes<HTMLImageElement> & {\n  fallback?: string\n  sources?: Array<SourceProps>\n}\n\nexport const Placeholder: FunctionComponent<PlaceholderProps> =\n  function Placeholder({ fallback, ...props }) {\n    if (fallback) {\n      return (\n        <Picture\n          {...props}\n          fallback={{\n            src: fallback,\n          }}\n          aria-hidden\n          alt=\"\"\n        />\n      )\n    } else {\n      return <div {...props}></div>\n    }\n  }\n\nPlaceholder.displayName = `Placeholder`\nPlaceholder.propTypes = {\n  fallback: PropTypes.string,\n  sources: Picture.propTypes?.sources,\n  alt: function (props, propName, componentName): Error | null {\n    if (!props[propName]) {\n      return null\n    }\n\n    return new Error(\n      `Invalid prop \\`${propName}\\` supplied to \\`${componentName}\\`. Validation failed.`\n    )\n  },\n}\n","import React from \"react\"\nimport { Picture, PictureProps } from \"./picture\"\n\nexport type MainImageProps = PictureProps\n\nexport const MainImage: React.FC<PictureProps> = function MainImage(props) {\n  return (\n    <>\n      <Picture {...props} />\n      <noscript>\n        <Picture {...props} shouldLoad={true} />\n      </noscript>\n    </>\n  )\n}\n\nMainImage.displayName = `MainImage`\nMainImage.propTypes = Picture.propTypes\n","import React from \"react\"\nimport { getWrapperProps, getMainProps, getPlaceholderProps } from \"./hooks\"\nimport { Placeholder } from \"./placeholder\"\nimport { MainImage, MainImageProps } from \"./main-image\"\nimport { LayoutWrapper } from \"./layout-wrapper\"\nimport PropTypes from \"prop-types\"\nimport type { FunctionComponent, WeakValidationMap } from \"react\"\nimport type { GatsbyImageProps, IGatsbyImageData } from \"./gatsby-image.browser\"\n\nconst removeNewLines = (str: string): string => str.replace(/\\n/g, ``)\n\nexport const GatsbyImage: FunctionComponent<GatsbyImageProps> =\n  function GatsbyImage({\n    as = `div`,\n    className,\n    class: preactClass,\n    style,\n    image,\n    loading = `lazy`,\n    imgClassName,\n    imgStyle,\n    backgroundColor,\n    objectFit,\n    objectPosition,\n    ...props\n  }) {\n    if (!image) {\n      console.warn(`[gatsby-plugin-image] Missing image prop`)\n      return null\n    }\n\n    if (preactClass) {\n      className = preactClass\n    }\n\n    imgStyle = {\n      objectFit,\n      objectPosition,\n      backgroundColor,\n      ...imgStyle,\n    }\n\n    const {\n      width,\n      height,\n      layout,\n      images,\n      placeholder,\n      backgroundColor: placeholderBackgroundColor,\n    } = image\n\n    const {\n      style: wStyle,\n      className: wClass,\n      ...wrapperProps\n    } = getWrapperProps(width, height, layout)\n\n    const cleanedImages: IGatsbyImageData[\"images\"] = {\n      fallback: undefined,\n      sources: [],\n    }\n    if (images.fallback) {\n      cleanedImages.fallback = {\n        ...images.fallback,\n        srcSet: images.fallback.srcSet\n          ? removeNewLines(images.fallback.srcSet)\n          : undefined,\n      }\n    }\n\n    if (images.sources) {\n      cleanedImages.sources = images.sources.map(source => {\n        return {\n          ...source,\n          srcSet: removeNewLines(source.srcSet),\n        }\n      })\n    }\n\n    return React.createElement(\n      as,\n      {\n        ...wrapperProps,\n        style: {\n          ...wStyle,\n          ...style,\n          backgroundColor,\n        },\n        className: `${wClass}${className ? ` ${className}` : ``}`,\n      },\n      <LayoutWrapper layout={layout} width={width} height={height}>\n        <Placeholder\n          {...getPlaceholderProps(\n            placeholder,\n            false,\n            layout,\n            width,\n            height,\n            placeholderBackgroundColor,\n            objectFit,\n            objectPosition\n          )}\n        />\n\n        <MainImage\n          data-gatsby-image-ssr=\"\"\n          className={imgClassName}\n          {...(props as Omit<\n            MainImageProps,\n            \"images\" | \"fallback\" | \"onError\" | \"onLoad\"\n          >)}\n          // When eager is set we want to start the isLoading state on true (we want to load the img without react)\n          {...getMainProps(\n            loading === `eager`,\n            false,\n            cleanedImages,\n            loading,\n            imgStyle\n          )}\n        />\n      </LayoutWrapper>\n    )\n  }\n\nexport const altValidator: PropTypes.Validator<string> = (\n  props: GatsbyImageProps,\n  propName,\n  componentName,\n  ...rest\n): Error | undefined => {\n  if (!props.alt && props.alt !== ``) {\n    return new Error(\n      `The \"alt\" prop is required in ${componentName}. If the image is purely presentational then pass an empty string: e.g. alt=\"\". Learn more: https://a11y-style-guide.com/style-guide/section-media.html`\n    )\n  }\n\n  return PropTypes.string(props, propName, componentName, ...rest)\n}\n\nexport const propTypes = {\n  image: PropTypes.object.isRequired,\n  alt: altValidator,\n} as WeakValidationMap<GatsbyImageProps>\n","import {\n  createElement,\n  memo,\n  useMemo,\n  useEffect,\n  useLayoutEffect,\n  useRef,\n} from \"react\"\nimport {\n  getWrapperProps,\n  gatsbyImageIsInstalled,\n  hasNativeLazyLoadSupport,\n} from \"./hooks\"\nimport { getSizer } from \"./layout-wrapper\"\nimport { propTypes } from \"./gatsby-image.server\"\nimport type {\n  FC,\n  ElementType,\n  FunctionComponent,\n  ImgHTMLAttributes,\n  CSSProperties,\n  ReactEventHandler,\n} from \"react\"\nimport type { renderImageToString } from \"./lazy-hydrate\"\nimport type { PlaceholderProps } from \"./placeholder\"\nimport type { MainImageProps } from \"./main-image\"\nimport type { Layout } from \"../image-utils\"\n\nconst imageCache = new Set<string>()\nlet renderImageToStringPromise\nlet renderImage: typeof renderImageToString | undefined\n\n// eslint-disable-next-line @typescript-eslint/naming-convention\nexport interface GatsbyImageProps\n  extends Omit<\n    ImgHTMLAttributes<HTMLImageElement>,\n    \"placeholder\" | \"onLoad\" | \"src\" | \"srcSet\" | \"width\" | \"height\"\n  > {\n  alt: string\n  as?: ElementType\n  className?: string\n  class?: string\n  imgClassName?: string\n  image: IGatsbyImageData\n  imgStyle?: CSSProperties\n  backgroundColor?: string\n  objectFit?: CSSProperties[\"objectFit\"]\n  objectPosition?: CSSProperties[\"objectPosition\"]\n  onLoad?: (props: { wasCached: boolean }) => void\n  onError?: ReactEventHandler<HTMLImageElement>\n  onStartLoad?: (props: { wasCached: boolean }) => void\n}\n\nexport interface IGatsbyImageData {\n  layout: Layout\n  width: number\n  height: number\n  backgroundColor?: string\n  images: Pick<MainImageProps, \"sources\" | \"fallback\">\n  placeholder?: Pick<PlaceholderProps, \"sources\" | \"fallback\">\n}\n\nconst GatsbyImageHydrator: FC<GatsbyImageProps> = function GatsbyImageHydrator({\n  as = `div`,\n  image,\n  style,\n  backgroundColor,\n  className,\n  class: preactClass,\n  onStartLoad,\n  onLoad,\n  onError,\n  ...props\n}) {\n  const { width, height, layout } = image\n  const {\n    style: wStyle,\n    className: wClass,\n    ...wrapperProps\n  } = getWrapperProps(width, height, layout)\n  const root = useRef<HTMLElement>()\n  const cacheKey = useMemo(() => JSON.stringify(image.images), [image.images])\n\n  // Preact uses class instead of className so we need to check for both\n  if (preactClass) {\n    className = preactClass\n  }\n\n  const sizer = getSizer(layout, width, height)\n\n  useEffect(() => {\n    if (!renderImageToStringPromise) {\n      renderImageToStringPromise = import(`./lazy-hydrate`).then(\n        ({ renderImageToString, swapPlaceholderImage }) => {\n          renderImage = renderImageToString\n\n          return {\n            renderImageToString,\n            swapPlaceholderImage,\n          }\n        }\n      )\n    }\n\n    // The plugin image component is a bit special where if it's server-side rendered, we add extra script tags to support lazy-loading without\n    // In this case we stop hydration but fire the correct events.\n    const ssrImage = root.current.querySelector(\n      `[data-gatsby-image-ssr]`\n    ) as HTMLImageElement\n    if (ssrImage && hasNativeLazyLoadSupport()) {\n      if (ssrImage.complete) {\n        // Trigger onStartload and onLoad events\n        onStartLoad?.({\n          wasCached: true,\n        })\n        onLoad?.({\n          wasCached: true,\n        })\n\n        // remove ssr key for state updates but add delay to not fight with native code snippt of gatsby-ssr\n        setTimeout(() => {\n          ssrImage.removeAttribute(`data-gatsby-image-ssr`)\n        }, 0)\n      } else {\n        onStartLoad?.({\n          wasCached: true,\n        })\n\n        ssrImage.addEventListener(`load`, function onLoadListener() {\n          ssrImage.removeEventListener(`load`, onLoadListener)\n\n          onLoad?.({\n            wasCached: true,\n          })\n          // remove ssr key for state updates but add delay to not fight with native code snippt of gatsby-ssr\n          setTimeout(() => {\n            ssrImage.removeAttribute(`data-gatsby-image-ssr`)\n          }, 0)\n        })\n      }\n\n      imageCache.add(cacheKey)\n\n      return\n    }\n\n    if (renderImage && imageCache.has(cacheKey)) {\n      return\n    }\n\n    let animationFrame\n    let cleanupCallback\n    renderImageToStringPromise.then(\n      ({ renderImageToString, swapPlaceholderImage }) => {\n        if (!root.current) {\n          return\n        }\n\n        root.current.innerHTML = renderImageToString({\n          isLoading: true,\n          isLoaded: imageCache.has(cacheKey),\n          image,\n          ...props,\n        })\n\n        if (!imageCache.has(cacheKey)) {\n          animationFrame = requestAnimationFrame(() => {\n            if (root.current) {\n              cleanupCallback = swapPlaceholderImage(\n                root.current,\n                cacheKey,\n                imageCache,\n                style,\n                onStartLoad,\n                onLoad,\n                onError\n              )\n            }\n          })\n        }\n      }\n    )\n\n    // eslint-disable-next-line consistent-return\n    return (): void => {\n      if (animationFrame) {\n        cancelAnimationFrame(animationFrame)\n      }\n      if (cleanupCallback) {\n        cleanupCallback()\n      }\n    }\n  }, [image])\n\n  // useLayoutEffect is ran before React commits to the DOM. This allows us to make sure our HTML is using our cached image version\n  useLayoutEffect(() => {\n    if (imageCache.has(cacheKey) && renderImage) {\n      root.current.innerHTML = renderImage({\n        isLoading: imageCache.has(cacheKey),\n        isLoaded: imageCache.has(cacheKey),\n        image,\n        ...props,\n      })\n\n      // Trigger onStartload and onLoad events\n      onStartLoad?.({\n        wasCached: true,\n      })\n      onLoad?.({\n        wasCached: true,\n      })\n    }\n  }, [image])\n\n  // By keeping all props equal React will keep the component in the DOM\n  return createElement(as, {\n    ...wrapperProps,\n    style: {\n      ...wStyle,\n      ...style,\n      backgroundColor,\n    },\n    className: `${wClass}${className ? ` ${className}` : ``}`,\n    ref: root,\n    dangerouslySetInnerHTML: {\n      __html: sizer,\n    },\n    suppressHydrationWarning: true,\n  })\n}\n\nexport const GatsbyImage: FunctionComponent<GatsbyImageProps> = memo(\n  function GatsbyImage(props) {\n    if (!props.image) {\n      if (process.env.NODE_ENV === `development`) {\n        console.warn(`[gatsby-plugin-image] Missing image prop`)\n      }\n\n      return null\n    }\n\n    if (!gatsbyImageIsInstalled() && process.env.NODE_ENV === `development`) {\n      console.warn(\n        `[gatsby-plugin-image] You're missing out on some cool performance features. Please add \"gatsby-plugin-image\" to your gatsby-config.js`\n      )\n    }\n\n    return createElement(GatsbyImageHydrator, props)\n  }\n)\n\nGatsbyImage.propTypes = propTypes\nGatsbyImage.displayName = `GatsbyImage`\n","import React, { FunctionComponent, ReactElement } from \"react\"\nimport {\n  altValidator,\n  GatsbyImage as GatsbyImageServer,\n} from \"./gatsby-image.server\"\nimport { GatsbyImageProps, IGatsbyImageData } from \"./gatsby-image.browser\"\nimport PropTypes from \"prop-types\"\nimport { ISharpGatsbyImageArgs } from \"../image-utils\"\n\nexport interface IStaticImageProps\n  extends Omit<GatsbyImageProps, \"image\">,\n    Omit<ISharpGatsbyImageArgs, \"backgroundColor\"> {\n  src: string\n  filename?: string\n}\n\n// These values are added by Babel. Do not add them manually\ninterface IPrivateProps {\n  __imageData?: IGatsbyImageData\n  __error?: string\n}\n\nexport function _getStaticImage(\n  GatsbyImage: FunctionComponent<GatsbyImageProps>\n): React.FC<IStaticImageProps & IPrivateProps> {\n  return function StaticImage({\n    src,\n    __imageData: imageData,\n    __error,\n    // We extract these because they're not meant to be passed-down to GatsbyImage\n    /* eslint-disable @typescript-eslint/no-unused-vars */\n    width,\n    height,\n    aspectRatio,\n    tracedSVGOptions,\n    placeholder,\n    formats,\n    quality,\n    transformOptions,\n    jpgOptions,\n    pngOptions,\n    webpOptions,\n    avifOptions,\n    blurredOptions,\n    breakpoints,\n    outputPixelDensities,\n    /* eslint-enable @typescript-eslint/no-unused-vars */\n    ...props\n  }): ReactElement {\n    if (__error) {\n      console.warn(__error)\n    }\n\n    if (imageData) {\n      return <GatsbyImage image={imageData} {...props} />\n    }\n    console.warn(`Image not loaded`, src)\n    if (!__error && process.env.NODE_ENV === `development`) {\n      console.warn(\n        `Please ensure that \"gatsby-plugin-image\" is included in the plugins array in gatsby-config.js, and that your version of gatsby is at least 2.24.78`\n      )\n    }\n    return null\n  }\n}\n\nconst StaticImage: React.FC<IStaticImageProps & IPrivateProps> =\n  _getStaticImage(GatsbyImageServer)\n\nconst checkDimensionProps: PropTypes.Validator<number> = (\n  props: IStaticImageProps & IPrivateProps,\n  propName: keyof IStaticImageProps & IPrivateProps,\n  ...rest\n) => {\n  if (\n    props.layout === `fullWidth` &&\n    (propName === `width` || propName === `height`) &&\n    props[propName]\n  ) {\n    return new Error(\n      `\"${propName}\" ${props[propName]} may not be passed when layout is fullWidth.`\n    )\n  }\n  return PropTypes.number(props, propName, ...rest)\n}\n\nconst validLayouts = new Set([`fixed`, `fullWidth`, `constrained`])\n\nexport const propTypes = {\n  src: PropTypes.string.isRequired,\n  alt: altValidator,\n  width: checkDimensionProps,\n  height: checkDimensionProps,\n  sizes: PropTypes.string,\n  layout: (props: IStaticImageProps & IPrivateProps): Error | undefined => {\n    if (props.layout === undefined) {\n      return undefined\n    }\n    if (validLayouts.has(props.layout)) {\n      return undefined\n    }\n\n    return new Error(\n      `Invalid value ${props.layout}\" provided for prop \"layout\". Defaulting to \"constrained\". Valid values are \"fixed\", \"fullWidth\" or \"constrained\".`\n    )\n  },\n}\n\nStaticImage.displayName = `StaticImage`\nStaticImage.propTypes = propTypes\n\nexport { StaticImage }\n","import {\n  GatsbyImage as GatsbyImageBrowser,\n  IGatsbyImageData,\n} from \"./gatsby-image.browser\"\nimport React from \"react\"\nimport {\n  _getStaticImage,\n  propTypes,\n  IStaticImageProps,\n} from \"./static-image.server\"\n// These values are added by Babel. Do not add them manually\ninterface IPrivateProps {\n  __imageData?: IGatsbyImageData\n  __error?: string\n}\n\nconst StaticImage: React.FC<IStaticImageProps & IPrivateProps> =\n  _getStaticImage(GatsbyImageBrowser)\n\nStaticImage.displayName = `StaticImage`\nStaticImage.propTypes = propTypes\n\nexport { StaticImage }\n","var React = require('react');\n\nfunction Velogdashboard (props) {\n    return React.createElement(\"svg\",props,[React.createElement(\"rect\",{\"width\":\"256\",\"height\":\"256\",\"rx\":\"12\",\"fill\":\"#1EC996\",\"key\":0}),React.createElement(\"path\",{\"d\":\"M56.9755 79.4031L71.1395 164.253H72.0966L118.909 79.4031H129.163L74.5054 176.605H63.9781L46.7216 79.4031H56.9755ZM156.263 176.605H121.4L140.1 79.4031H175.374C205.179 79.4031 219.849 97.662 214.038 127.87C208.174 158.346 186.478 176.605 156.263 176.605ZM145.24 159.286H158.775C177.642 159.286 189.346 149.619 193.53 127.87C197.688 106.254 189.679 96.7222 170.948 96.7222H157.276L145.24 159.286Z\",\"fill\":\"white\",\"key\":1})]);\n}\n\nVelogdashboard.defaultProps = {\"width\":\"256\",\"height\":\"256\",\"viewBox\":\"0 0 256 256\",\"fill\":\"none\"};\n\nmodule.exports = Velogdashboard;\n\nVelogdashboard.default = Velogdashboard;\n","var React = require('react');\n\nfunction Linkedin (props) {\n    return React.createElement(\"svg\",props,[React.createElement(\"g\",{\"clipPath\":\"url(#clip0_304_8)\",\"key\":0},React.createElement(\"path\",{\"d\":\"M8.49997 0.340088C3.99327 0.340088 0.339966 3.99339 0.339966 8.50009C0.339966 13.0068 3.99327 16.6601 8.49997 16.6601C13.0067 16.6601 16.66 13.0068 16.66 8.50009C16.66 3.99339 13.0067 0.340088 8.49997 0.340088ZM6.50247 11.8822H4.85007V6.56464H6.50247V11.8822ZM5.66607 5.91184C5.14417 5.91184 4.80672 5.54209 4.80672 5.08479C4.80672 4.61814 5.15437 4.25944 5.68732 4.25944C6.22027 4.25944 6.54667 4.61814 6.55687 5.08479C6.55687 5.54209 6.22027 5.91184 5.66607 5.91184ZM12.5375 11.8822H10.8851V8.93529C10.8851 8.24934 10.6454 7.78354 10.0478 7.78354C9.59137 7.78354 9.32022 8.09889 9.20037 8.40234C9.15617 8.51029 9.14512 8.66329 9.14512 8.81544V11.8814H7.49187V8.26039C7.49187 7.59654 7.47062 7.04149 7.44852 6.56379H8.88417L8.95982 7.30244H8.99297C9.21057 6.95564 9.74352 6.44394 10.6352 6.44394C11.7223 6.44394 12.5375 7.17239 12.5375 8.73809V11.8822Z\",\"fill\":\"black\"})),React.createElement(\"defs\",{\"key\":1},React.createElement(\"clipPath\",{\"id\":\"clip0_304_8\"},React.createElement(\"rect\",{\"width\":\"17\",\"height\":\"17\",\"fill\":\"white\"})))]);\n}\n\nLinkedin.defaultProps = {\"width\":\"17\",\"height\":\"17\",\"viewBox\":\"0 0 17 17\",\"fill\":\"none\"};\n\nmodule.exports = Linkedin;\n\nLinkedin.default = Linkedin;\n","var React = require('react');\n\nfunction Moon (props) {\n    return React.createElement(\"svg\",props,React.createElement(\"path\",{\"d\":\"M15.5302 0.5C12.7183 0.500517 9.95922 1.26434 7.54735 2.70999C5.13548 4.15564 3.16128 6.22889 1.83533 8.70858C0.509385 11.1883 -0.118568 13.9814 0.0184566 16.79C0.155481 19.5986 1.05234 22.3173 2.61338 24.6562C4.17441 26.995 6.34105 28.8662 8.88219 30.0702C11.4233 31.2742 14.2436 31.7659 17.0423 31.4926C19.8409 31.2194 22.5129 30.1916 24.7732 28.5189C27.0335 26.8462 28.7973 24.5913 29.8766 21.9947C30.4062 20.721 29.1372 19.441 27.8604 19.9598C25.672 20.8463 23.2422 20.9377 20.9934 20.2183C18.7447 19.499 16.8191 18.0142 15.5516 16.0222C14.284 14.0303 13.7547 11.6571 14.0556 9.31525C14.3565 6.97345 15.4685 4.81115 17.1985 3.20431L17.3181 3.08004C18.1739 2.10146 17.4936 0.512426 16.1407 0.512426H15.7275L15.6219 0.503107L15.5302 0.5Z\",\"fill\":\"black\"}));\n}\n\nMoon.defaultProps = {\"width\":\"30\",\"height\":\"32\",\"viewBox\":\"0 0 30 32\",\"fill\":\"none\"};\n\nmodule.exports = Moon;\n\nMoon.default = Moon;\n","var React = require('react');\n\nfunction Sun (props) {\n    return React.createElement(\"svg\",props,React.createElement(\"path\",{\"d\":\"M15 0.5C15.3315 0.5 15.6495 0.631696 15.8839 0.866117C16.1183 1.10054 16.25 1.41848 16.25 1.75V4.25C16.25 4.58152 16.1183 4.89946 15.8839 5.13388C15.6495 5.3683 15.3315 5.5 15 5.5C14.6685 5.5 14.3505 5.3683 14.1161 5.13388C13.8817 4.89946 13.75 4.58152 13.75 4.25V1.75C13.75 1.41848 13.8817 1.10054 14.1161 0.866117C14.3505 0.631696 14.6685 0.5 15 0.5ZM0 15.5C0 15.1685 0.131696 14.8505 0.366117 14.6161C0.600537 14.3817 0.918479 14.25 1.25 14.25H3.75C4.08152 14.25 4.39946 14.3817 4.63388 14.6161C4.8683 14.8505 5 15.1685 5 15.5C5 15.8315 4.8683 16.1495 4.63388 16.3839C4.39946 16.6183 4.08152 16.75 3.75 16.75H1.25C0.918479 16.75 0.600537 16.6183 0.366117 16.3839C0.131696 16.1495 0 15.8315 0 15.5ZM26.25 14.25C25.9185 14.25 25.6005 14.3817 25.3661 14.6161C25.1317 14.8505 25 15.1685 25 15.5C25 15.8315 25.1317 16.1495 25.3661 16.3839C25.6005 16.6183 25.9185 16.75 26.25 16.75H28.75C29.0815 16.75 29.3995 16.6183 29.6339 16.3839C29.8683 16.1495 30 15.8315 30 15.5C30 15.1685 29.8683 14.8505 29.6339 14.6161C29.3995 14.3817 29.0815 14.25 28.75 14.25H26.25ZM16.25 26.75C16.25 26.4185 16.1183 26.1005 15.8839 25.8661C15.6495 25.6317 15.3315 25.5 15 25.5C14.6685 25.5 14.3505 25.6317 14.1161 25.8661C13.8817 26.1005 13.75 26.4185 13.75 26.75V29.25C13.75 29.5815 13.8817 29.8995 14.1161 30.1339C14.3505 30.3683 14.6685 30.5 15 30.5C15.3315 30.5 15.6495 30.3683 15.8839 30.1339C16.1183 29.8995 16.25 29.5815 16.25 29.25V26.75ZM7.92875 22.5712C8.16309 22.8057 8.29473 23.1235 8.29473 23.455C8.29473 23.7865 8.16309 24.1043 7.92875 24.3387L6.1625 26.1063C6.04719 26.2256 5.90926 26.3209 5.75676 26.3864C5.60425 26.4519 5.44023 26.4864 5.27425 26.4878C5.10828 26.4893 4.94368 26.4576 4.79006 26.3948C4.63644 26.3319 4.49687 26.2391 4.37951 26.1217C4.26214 26.0044 4.16932 25.8648 4.10647 25.7112C4.04362 25.5576 4.01199 25.393 4.01344 25.227C4.01488 25.061 4.04936 24.897 4.11487 24.7445C4.18038 24.592 4.27561 24.4541 4.395 24.3387L6.1625 22.5712C6.39691 22.3369 6.71479 22.2053 7.04625 22.2053C7.37771 22.2053 7.69434 22.3369 7.92875 22.5712ZM25.6063 4.89375C25.8406 5.12816 25.9722 5.44604 25.9722 5.7775C25.9722 6.10896 25.8406 6.42684 25.6063 6.66125L23.8387 8.42875C23.7234 8.54814 23.5855 8.64337 23.433 8.70888C23.2805 8.77439 23.1165 8.80887 22.9505 8.81031C22.7845 8.81176 22.6199 8.78013 22.4663 8.71728C22.3127 8.65443 22.1731 8.56161 22.0558 8.44424C21.9384 8.32688 21.8456 8.18731 21.7827 8.03369C21.7199 7.88007 21.6882 7.71547 21.6897 7.5495C21.6911 7.38352 21.7256 7.2195 21.7911 7.06699C21.8566 6.91449 21.9519 6.77656 22.0712 6.66125L23.8387 4.89375C24.0732 4.65941 24.391 4.52777 24.7225 4.52777C25.054 4.52777 25.3718 4.65941 25.6063 4.89375ZM4.39375 4.89375C4.62816 4.65941 4.94604 4.52777 5.2775 4.52777C5.60896 4.52777 5.92684 4.65941 6.16125 4.89375L7.92875 6.66125C8.05093 6.77582 8.14884 6.91378 8.21666 7.06693C8.28447 7.22008 8.32082 7.3853 8.32354 7.55277C8.32626 7.72024 8.2953 7.88655 8.23249 8.04182C8.16967 8.19709 8.0763 8.33816 7.9579 8.45663C7.83951 8.57511 7.69851 8.66859 7.54329 8.73151C7.38806 8.79443 7.22177 8.82551 7.0543 8.82291C6.88682 8.82031 6.72158 8.78408 6.56838 8.71637C6.41518 8.64866 6.27716 8.55085 6.1625 8.42875L4.39375 6.6625C4.15941 6.42809 4.02777 6.11021 4.02777 5.77875C4.02777 5.44729 4.15941 5.12816 4.39375 4.89375ZM22.0712 22.5712C22.3057 22.3369 22.6235 22.2053 22.955 22.2053C23.2865 22.2053 23.6043 22.3369 23.8387 22.5712L25.6063 24.3387C25.7256 24.4541 25.8209 24.592 25.8864 24.7445C25.9519 24.897 25.9864 25.061 25.9878 25.227C25.9893 25.393 25.9576 25.5576 25.8948 25.7112C25.8319 25.8648 25.7391 26.0044 25.6217 26.1217C25.5044 26.2391 25.3648 26.3319 25.2112 26.3948C25.0576 26.4576 24.893 26.4893 24.727 26.4878C24.561 26.4864 24.397 26.4519 24.2445 26.3864C24.092 26.3209 23.9541 26.2256 23.8387 26.1063L22.0712 24.3387C21.8369 24.1043 21.7053 23.7865 21.7053 23.455C21.7053 23.1235 21.8369 22.8057 22.0712 22.5712ZM6.25 15.5C6.25 14.3509 6.47633 13.2131 6.91605 12.1515C7.35578 11.0899 8.0003 10.1253 8.81282 9.31282C9.62533 8.5003 10.5899 7.85578 11.6515 7.41605C12.7131 6.97633 13.8509 6.75 15 6.75C16.1491 6.75 17.2869 6.97633 18.3485 7.41605C19.4101 7.85578 20.3747 8.5003 21.1872 9.31282C21.9997 10.1253 22.6442 11.0899 23.0839 12.1515C23.5237 13.2131 23.75 14.3509 23.75 15.5C23.75 17.8206 22.8281 20.0462 21.1872 21.6872C19.5462 23.3281 17.3206 24.25 15 24.25C12.6794 24.25 10.4538 23.3281 8.81282 21.6872C7.17187 20.0462 6.25 17.8206 6.25 15.5Z\",\"fill\":\"black\"}));\n}\n\nSun.defaultProps = {\"width\":\"30\",\"height\":\"31\",\"viewBox\":\"0 0 30 31\",\"fill\":\"none\"};\n\nmodule.exports = Sun;\n\nSun.default = Sun;\n","var React = require('react');\n\nfunction Github (props) {\n    return React.createElement(\"svg\",props,[React.createElement(\"g\",{\"clipPath\":\"url(#clip0_287_16)\",\"key\":0},React.createElement(\"path\",{\"d\":\"M8.5 0.600098C7.38376 0.600098 6.27846 0.825415 5.24719 1.26319C4.21592 1.70096 3.27889 2.34261 2.48959 3.1515C0.895533 4.78513 0 7.00082 0 9.31113C0 13.1614 2.4395 16.428 5.814 17.5866C6.239 17.6563 6.375 17.3863 6.375 17.1511V15.6789C4.0205 16.2016 3.519 14.5116 3.519 14.5116C3.128 13.5011 2.5755 13.2311 2.5755 13.2311C1.802 12.691 2.635 12.7084 2.635 12.7084C3.485 12.7694 3.9355 13.6057 3.9355 13.6057C4.675 14.9297 5.9245 14.5377 6.409 14.3287C6.4855 13.7625 6.7065 13.3792 6.9445 13.1614C5.0575 12.9436 3.077 12.1945 3.077 8.87558C3.077 7.90865 3.4 7.13337 3.9525 6.51489C3.8675 6.29711 3.57 5.39116 4.0375 4.21517C4.0375 4.21517 4.7515 3.97998 6.375 5.1037C7.0465 4.91206 7.7775 4.81624 8.5 4.81624C9.2225 4.81624 9.9535 4.91206 10.625 5.1037C12.2485 3.97998 12.9625 4.21517 12.9625 4.21517C13.43 5.39116 13.1325 6.29711 13.0475 6.51489C13.6 7.13337 13.923 7.90865 13.923 8.87558C13.923 12.2032 11.934 12.9349 10.0385 13.1527C10.3445 13.4227 10.625 13.9541 10.625 14.7642V17.1511C10.625 17.3863 10.761 17.665 11.1945 17.5866C14.569 16.4193 17 13.1614 17 9.31113C17 8.16718 16.7801 7.03443 16.353 5.97756C15.9258 4.92069 15.2997 3.96039 14.5104 3.1515C13.7211 2.34261 12.7841 1.70096 11.7528 1.26319C10.7215 0.825415 9.61624 0.600098 8.5 0.600098Z\",\"fill\":\"black\"})),React.createElement(\"defs\",{\"key\":1},React.createElement(\"clipPath\",{\"id\":\"clip0_287_16\"},React.createElement(\"rect\",{\"width\":\"17\",\"height\":\"17\",\"fill\":\"white\",\"transform\":\"translate(0 0.600098)\"})))]);\n}\n\nGithub.defaultProps = {\"width\":\"17\",\"height\":\"18\",\"viewBox\":\"0 0 17 18\",\"fill\":\"none\"};\n\nmodule.exports = Github;\n\nGithub.default = Github;\n","var React = require('react');\n\nfunction Velog (props) {\n    return React.createElement(\"svg\",props,[React.createElement(\"g\",{\"clipPath\":\"url(#clip0_287_18)\",\"key\":0},React.createElement(\"path\",{\"d\":\"M2.125 0.600098C0.94775 0.600098 0 1.54785 0 2.7251V15.4751C0 16.6523 0.94775 17.6001 2.125 17.6001H14.875C16.0522 17.6001 17 16.6523 17 15.4751V2.7251C17 1.54785 16.0522 0.600098 14.875 0.600098H2.125ZM7.00046 5.02718C7.44671 5.02718 7.71233 5.23968 7.79733 5.66468L8.83362 11.546C9.16276 11.1101 9.43335 10.7434 9.64537 10.4459C9.99778 9.93872 10.302 9.3997 10.5542 8.83589C10.8413 8.23003 10.9848 7.68815 10.9848 7.21026C10.9848 6.92363 10.905 6.69531 10.7454 6.52531C10.5967 6.34492 10.315 6.1166 9.90037 5.84035C10.3254 5.29824 10.8566 5.02718 11.4941 5.02718C11.8341 5.02718 12.1158 5.12824 12.3392 5.33035C12.5729 5.53199 12.6896 5.82949 12.6891 6.22285C12.6891 6.8816 12.4128 7.70515 11.8603 8.69351C11.3187 9.67101 10.2725 11.1425 8.72171 13.1078L7.14425 13.2183L5.93229 6.39851H4.33854V5.72843C4.76354 5.59007 5.26292 5.44132 5.83667 5.28218C6.41042 5.11218 6.79835 5.02718 7.00046 5.02718Z\",\"fill\":\"black\"})),React.createElement(\"defs\",{\"key\":1},React.createElement(\"clipPath\",{\"id\":\"clip0_287_18\"},React.createElement(\"rect\",{\"width\":\"17\",\"height\":\"17\",\"fill\":\"white\",\"transform\":\"translate(0 0.600098)\"})))]);\n}\n\nVelog.defaultProps = {\"width\":\"17\",\"height\":\"18\",\"viewBox\":\"0 0 17 18\",\"fill\":\"none\"};\n\nmodule.exports = Velog;\n\nVelog.default = Velog;\n","var React = require('react');\n\nfunction Repo (props) {\n    return React.createElement(\"svg\",props,[React.createElement(\"path\",{\"d\":\"M-0.00012207 100V0C42.6492 0 50.7927 2.32852 61.1093 18.5136C64.6929 24.1357 70.626 31.6776 86.3074 41.6094C101.167 60.5089 99.9996 83.9086 99.9996 100H-0.00012207Z\",\"fill\":\"#787878\",\"key\":0}),React.createElement(\"path\",{\"d\":\"M94.1187 20.5891C55.8834 29.4126 0.0287807 -17.6463 0.0286865 100.004H79.4128L94.1187 20.5891Z\",\"fill\":\"#D8D8D8\",\"key\":1}),React.createElement(\"path\",{\"d\":\"M100.001 35.2952C41.1774 29.4128 5.8833 61.7658 5.8833 99.9997H99.9987L100.001 35.2952Z\",\"fill\":\"black\",\"key\":2})]);\n}\n\nRepo.defaultProps = {\"width\":\"101\",\"height\":\"100\",\"viewBox\":\"0 0 101 100\",\"fill\":\"none\"};\n\nmodule.exports = Repo;\n\nRepo.default = Repo;\n","'use strict';\n\nconst UPPERCASE = /[\\p{Lu}]/u;\nconst LOWERCASE = /[\\p{Ll}]/u;\nconst LEADING_CAPITAL = /^[\\p{Lu}](?![\\p{Lu}])/gu;\nconst IDENTIFIER = /([\\p{Alpha}\\p{N}_]|$)/u;\nconst SEPARATORS = /[_.\\- ]+/;\n\nconst LEADING_SEPARATORS = new RegExp('^' + SEPARATORS.source);\nconst SEPARATORS_AND_IDENTIFIER = new RegExp(SEPARATORS.source + IDENTIFIER.source, 'gu');\nconst NUMBERS_AND_IDENTIFIER = new RegExp('\\\\d+' + IDENTIFIER.source, 'gu');\n\nconst preserveCamelCase = (string, toLowerCase, toUpperCase) => {\n\tlet isLastCharLower = false;\n\tlet isLastCharUpper = false;\n\tlet isLastLastCharUpper = false;\n\n\tfor (let i = 0; i < string.length; i++) {\n\t\tconst character = string[i];\n\n\t\tif (isLastCharLower && UPPERCASE.test(character)) {\n\t\t\tstring = string.slice(0, i) + '-' + string.slice(i);\n\t\t\tisLastCharLower = false;\n\t\t\tisLastLastCharUpper = isLastCharUpper;\n\t\t\tisLastCharUpper = true;\n\t\t\ti++;\n\t\t} else if (isLastCharUpper && isLastLastCharUpper && LOWERCASE.test(character)) {\n\t\t\tstring = string.slice(0, i - 1) + '-' + string.slice(i - 1);\n\t\t\tisLastLastCharUpper = isLastCharUpper;\n\t\t\tisLastCharUpper = false;\n\t\t\tisLastCharLower = true;\n\t\t} else {\n\t\t\tisLastCharLower = toLowerCase(character) === character && toUpperCase(character) !== character;\n\t\t\tisLastLastCharUpper = isLastCharUpper;\n\t\t\tisLastCharUpper = toUpperCase(character) === character && toLowerCase(character) !== character;\n\t\t}\n\t}\n\n\treturn string;\n};\n\nconst preserveConsecutiveUppercase = (input, toLowerCase) => {\n\tLEADING_CAPITAL.lastIndex = 0;\n\n\treturn input.replace(LEADING_CAPITAL, m1 => toLowerCase(m1));\n};\n\nconst postProcess = (input, toUpperCase) => {\n\tSEPARATORS_AND_IDENTIFIER.lastIndex = 0;\n\tNUMBERS_AND_IDENTIFIER.lastIndex = 0;\n\n\treturn input.replace(SEPARATORS_AND_IDENTIFIER, (_, identifier) => toUpperCase(identifier))\n\t\t.replace(NUMBERS_AND_IDENTIFIER, m => toUpperCase(m));\n};\n\nconst camelCase = (input, options) => {\n\tif (!(typeof input === 'string' || Array.isArray(input))) {\n\t\tthrow new TypeError('Expected the input to be `string | string[]`');\n\t}\n\n\toptions = {\n\t\tpascalCase: false,\n\t\tpreserveConsecutiveUppercase: false,\n\t\t...options\n\t};\n\n\tif (Array.isArray(input)) {\n\t\tinput = input.map(x => x.trim())\n\t\t\t.filter(x => x.length)\n\t\t\t.join('-');\n\t} else {\n\t\tinput = input.trim();\n\t}\n\n\tif (input.length === 0) {\n\t\treturn '';\n\t}\n\n\tconst toLowerCase = options.locale === false ?\n\t\tstring => string.toLowerCase() :\n\t\tstring => string.toLocaleLowerCase(options.locale);\n\tconst toUpperCase = options.locale === false ?\n\t\tstring => string.toUpperCase() :\n\t\tstring => string.toLocaleUpperCase(options.locale);\n\n\tif (input.length === 1) {\n\t\treturn options.pascalCase ? toUpperCase(input) : toLowerCase(input);\n\t}\n\n\tconst hasUpperCase = input !== toLowerCase(input);\n\n\tif (hasUpperCase) {\n\t\tinput = preserveCamelCase(input, toLowerCase, toUpperCase);\n\t}\n\n\tinput = input.replace(LEADING_SEPARATORS, '');\n\n\tif (options.preserveConsecutiveUppercase) {\n\t\tinput = preserveConsecutiveUppercase(input, toLowerCase);\n\t} else {\n\t\tinput = toLowerCase(input);\n\t}\n\n\tif (options.pascalCase) {\n\t\tinput = toUpperCase(input.charAt(0)) + input.slice(1);\n\t}\n\n\treturn postProcess(input, toUpperCase);\n};\n\nmodule.exports = camelCase;\n// TODO: Remove this for the next major release\nmodule.exports.default = camelCase;\n","import * as React from \"react\";\n\nexport const Contacts = ({ contents }) => (\n  <ul className=\"flex flex-col gap-3\">\n    {contents.map(({ icon, href, content }) => (\n      <li className=\"flex gap-4 items-center font-medium text-[15px]\" key={content}>\n        {icon}\n        <a href={href ? href : content} className=\"hover:underline\">\n          {content}\n        </a>\n      </li>\n    ))}\n  </ul>\n);\n","import * as React from \"react\";\n\nexport const Introduce = () => (\n  <div className=\"flex flex-col gap-7\">\n    <h2 className=\"text-[20px] font-bold leading-none\">\n      사람들의 <span className=\"text-[#448F5E]\">불편함</span>을 해결하기 위해 노력하는 FE 엔지니어입니다.\n    </h2>\n    <span className=\"font-normal text-[17px] leading-7\">\n      사용자의 불편함을 해결하는 것을 핵심 가치로 두고 있습니다. <br />\n      더 나은 경험을 제공하기 위해 끊임없이 고민하고 개선합니다.\n      <br />\n      <br />\n      새로운 기술과 피드백을 열린 자세로 받아들이며, 지속적인 학습을 통해 시야를 넓힙니다. <br />\n      또한 다른 사람들과 함께 지식을 공유하고 받아들이는 것을 선호합니다.\n      <br />\n      <br />\n      이러한 노력과 꾸준함이 저와 동료들의 성장에 도움이 될 수 있다고 믿습니다.\n    </span>\n  </div>\n);\n","import React from \"react\";\n\nexport const TwoWayLayout = ({ icon, title, date, tabs, children }) => {\n  return (\n    <div className=\"flex gap-6 w-full\">\n      <div className=\"w-[225px] flex flex-col gap-4 shrink-0\">\n        <div className=\"flex items-center gap-4\">\n          {icon}\n          <h2 className=\"text-[20px] font-bold\">{title}</h2>\n        </div>\n        {date && <span className=\"text-[17px] font-light text-gray-500\">{date}</span>}\n        {tabs?.map(({ icon, name, action }) => (\n          <div className=\"flex gap-2 items-center\" key={name}>\n            {icon}\n            {action ? (\n              <button onClick={action} className=\"text-[17px] font-medium hover:underline\">\n                {name}\n              </button>\n            ) : (\n              <span className=\"text-[17px] font-medium\">{name}</span>\n            )}\n          </div>\n        ))}\n      </div>\n      <div className=\"w-full flex flex-col gap-4\">{children}</div>\n    </div>\n  );\n};\n","import * as React from \"react\";\nimport { TwoWayLayout } from \"../TwoWayLayout\";\n\nexport const Project = ({ icon, name, banner, date, links, sections }) => {\n  return (\n    <TwoWayLayout\n      title={name}\n      icon={icon}\n      date={date}\n      tabs={links.map(({ icon, name, href }) => ({\n        icon,\n        name,\n        action: () => window.open(href),\n      }))}\n    >\n      {banner}\n      {sections?.map(({ title, content }) => (\n        <div className=\"flex flex-col gap-1 page-break\">\n          <h2 className=\"font-bold text-[22px]\">{title}</h2>\n          {content}\n        </div>\n      ))}\n    </TwoWayLayout>\n  );\n};\n","import * as React from \"react\";\n\nexport const Section = ({ title, children, sliceInPrint }) => {\n  return (\n    <section\n      className={`flex flex-col gap-7 ${sliceInPrint && \"print:[page-break-before:_always]\"} ${\n        title && \"pt-10 border-t-[1px] border-t-gray-300\"\n      }`}\n    >\n      {title && <h1 className=\"text-[35px] font-bold leading-none select-none\">{title}</h1>}\n      {children}\n    </section>\n  );\n};\n","import React from \"react\";\n\nexport const List = ({ contents }) => {\n  const getChildren = (items) => {\n    return (\n      <ul className=\"list-disc pl-6 flex flex-col gap-3 w-full\">\n        {items.map((i) =>\n          typeof i === \"string\" ? (\n            <li\n              className=\"w-full break-words\"\n              dangerouslySetInnerHTML={{\n                __html: i\n                  .replace(/\\*\\*(.*?)\\*\\*/g, \"<b>$1</b>\")\n                  .replace(\n                    /!\\[(.*?)\\]\\((.*?)\\)/g,\n                    '<a href=\"$2\" style=\"color:#9ca3af; font-weight:600; text-decoration: underline\" target=\"_blank\">$1</a>'\n                  ),\n              }}\n            />\n          ) : (\n            getChildren(i)\n          )\n        )}\n      </ul>\n    );\n  };\n\n  return getChildren(contents);\n};\n","import * as React from \"react\";\nimport { List } from \"../List\";\n\nexport const Skillset = ({ title, contents }) => {\n  return (\n    <div className=\"w-full flex items-start gap-5\">\n      <span className=\"bg-gray-100 w-[225px] shrink-0 block px-2 py-1 text-[20px] font-semibold select-none\">\n        {title}\n      </span>\n      <List contents={contents} />\n    </div>\n  );\n};\n","import React from \"react\";\n\nexport const Layout = ({ children, ...rest }) => {\n  return (\n    <main className=\"w-full h-screen\">\n      <header className=\"w-full h-[180px] bg-[#448F5E] print:h-[90px]\" />\n      <div className=\"w-full print:w-[900px] min-h-full flex justify-center transition-all duration-300 bg-gray-50 print:bg-white\">\n        <div {...rest}>{children}</div>\n      </div>\n    </main>\n  );\n};\n","import React from \"react\";\n\nimport { Layout, Introduce, Contacts, Project, Section, Skillset, List } from \"../components\";\nimport { Email, Github, Linkedin, Velog, Repo, Sample, VelogDashboard } from \"../images\";\nimport { StaticImage } from \"gatsby-plugin-image\";\nimport { TwoWayLayout } from \"../components/TwoWayLayout\";\n\nconst IndexPage = () => {\n  return (\n    <Layout className=\"my-[105px] print:my-[50px] w-[900px] flex flex-col gap-10\">\n      <Section>\n        <h1 className=\"text-[35px] font-black leading-none select-none\">육기준</h1>\n        <Introduce />\n        <Contacts\n          contents={[\n            { icon: <Email />, href: \"mailto:dbrrl1127@gmail.com\", content: \"dbrrl1127@gmail.com\" },\n            { icon: <Github />, content: \"https://www.github.com/six-standard\" },\n            { icon: <Velog />, content: \"https://velog.io/@six-standard\" },\n            { icon: <Linkedin />, content: \"https://www.linkedin.com/in/기준-육/\" },\n          ]}\n        />\n      </Section>\n      <Section title=\"프로젝트\">\n        <Project\n          icon={<Repo className=\"w-[30px] h-[30px]\" />}\n          name=\"REPO\"\n          date=\"2024. 06 ~ ONGOING\"\n          banner={\n            <StaticImage\n              src=\"../images/RepoBanner.png\"\n              alt=\"배너 이미지\"\n              className=\"w-[657px] h-[350px]\"\n            />\n          }\n          links={[\n            { icon: <Github />, name: \"Github →\", href: \"https://github.com/DSM-Repo/repo\" },\n            {\n              icon: <Sample />,\n              name: \"Sample →\",\n              href: \"https://www.dsm-repo.com/resume_viewer/66dc46c0fcaf9157ccc2e3ff\",\n            },\n            {\n              icon: <Repo className=\"w-[17px] h-[17px]\" />,\n              name: \"Service →\",\n              href: \"https://www.dsm-repo.com/\",\n            },\n          ]}\n          sections={[\n            {\n              title: \"개요\",\n              content: (\n                <span className=\"leading-7 text-[16px]\">\n                  대덕소프트마이스터고등학교 학생을 위한 이력서 관리 플랫폼입니다.\n                  <br />\n                  학생들을 위한 손쉬운 이력서 작성 및 공유, 선생님들을 위한 빠른 피드백 및 레주메북\n                  변환 기능을 제공하며, 변환된 레주메북은 자체 뷰어를 통해 저희 학교와 MOU를 맺은\n                  기업들에게 제공됩니다. <br />\n                  작성 기간동안 <b>120+</b>명의 학생들의 이력서를 관리하였습니다.\n                </span>\n              ),\n            },\n            {\n              title: \"기술 스택\",\n              content: (\n                <List\n                  contents={[\n                    \"**React** - 아직 지식이 부족한 NextJS에 비해 지식이 많으며 빠른 개발이 가능하여 선택\",\n                    \"**Yarn Workspace** - 공통 설정 파일과 UI 컴포넌트의 손쉬운 관리 및 적용을 위해 선택\",\n                    \"**React Hook Form & Zod** - 입력 렌더링 최적화 및 유지보수의 용이성을 위해 선택\",\n                    \"**Tanstack-Query & Axios** - 간편한 API 연동 및 낙관적 업데이트, 콜백 관리를 위해 선택\",\n                    \"**React-PDF & jsPDF** - 간편한 PDF 렌더링 및 다운로드 기능을 위해 선택\",\n                  ]}\n                />\n              ),\n            },\n            {\n              title: \"기여\",\n              content: (\n                <List\n                  contents={[\n                    \"작성, 미리보기를 포함한 학생 서비스 개발\",\n                    \"React-hook-form 라이브러리 도입\",\n                    [\n                      \"복잡했던 입력 상태관리 코드 최적화\",\n                      \"Zod 라이브러리를 위한 패턴 처리 중앙화\",\n                    ],\n                    \"Yarn Workspaces 기반 모노레포 설계 및 구현\",\n                  ]}\n                />\n              ),\n            },\n            {\n              title: \"트러블슈팅\",\n              content: (\n                <>\n                  <div className=\"flex flex-col gap-1\">\n                    <h3 className=\"font-semibold text-[18px]\">\n                      낙관적 업데이트를 통한 사용자 경험 향상\n                    </h3>\n                    <List\n                      contents={[\n                        \"**원인**: 네트워크가 느려지거나 서버 부하로 인해 응답 시간이 길어질 경우, 사용자가 해당 글의 업데이트 반영을 늦게 확인하게 되는 불편함 발생\",\n                        \"**해결 방법**: Tanstack-Query 라이브러리를 통해 낙관적 업데이트를 구현하여, 응답이 아직 오지 않은 상황에서도 업데이트를 빠르게 반영할 수 있게 개선\",\n                        \"**배운 점**: 낙관적 업데이트의 원리 및 동작 방식을 배웠으며, Tanstack-Query의 데이터 관리 방식을 고도화할 수 있었음\",\n                      ]}\n                    />\n                  </div>\n                  <div className=\"flex flex-col gap-1\">\n                    <h3 className=\"font-semibold text-[18px]\">\n                      미리보기 PDF 다운로드시 Javascript 동작 멈춤\n                    </h3>\n                    <List\n                      contents={[\n                        \"**원인**: PDF 노드를 canvas를 통해 이미지 형태로 변환하는 html2canvas 라이브러리의 코드가 메인 스레드의 호출 스택을 오래 점유하여 변환하는 동안 쌓인 함수들의 실행이 지연되는 문제 발생\",\n                        \"**해결 방법**: canvas 변환 코드를 별도 스레드에서 동작하는 Web Worker로 옮기고, 메시지를 통해 blob 형태로 변환된 이미지 값을 받는 식으로 수정하여 해결.\",\n                        \"**배운 점**: Web Worker의 개념과 동작 방식, 메인 스레드가 실제로 오래 점유될 경우에 어떤 일이 발생하는지에 대해 배울 수 있었음.\",\n                      ]}\n                    />\n                  </div>\n                  <div className=\"flex flex-col gap-1\">\n                    <h3 className=\"font-semibold text-[18px]\">특정 운영체제에서의 PDF 화질 저하</h3>\n                    <List\n                      contents={[\n                        \"**원인**: 현재 사용중인 React-PDF의 DPI 값은 72 고정인데, Windows와 Linux에서는 기본 96 DPI를 사용하기 떄문에 운영체제의 DPI에 맞추기 위해 PDF가 뭉개져서 표시되는 문제 발생.\",\n                        \"**해결 방법**: PDF Canvas의 Scale 값을 3으로 고정한 상황에서, CSS의 Transform Scale 옵션을 통해 크기를 원래대로 돌리면서 내부 픽셀을 압축하여 DPI를 강제로 올리는 방식으로 해결.\",\n                        \"**배운 점**: 운영체제의 화면 표시 방식에 따라 페이지의 내용물이 다를 수 있다는 점과, 픽셀 압축에 대해서 배울 수 있었음.\",\n                      ]}\n                    />\n                  </div>\n                </>\n              ),\n            },\n          ]}\n        />\n        <Project\n          icon={<VelogDashboard className=\"w-[30px] h-[30px]\" />}\n          name=\"Velog Dashboard\"\n          smallTitle\n          banner={\n            <StaticImage\n              src=\"../images/VDBanner.png\"\n              alt=\"배너 이미지\"\n              className=\"w-[657px] h-[350px]\"\n            />\n          }\n          date=\"2024. 11 ~ ONGOING\"\n          links={[\n            {\n              icon: <Github />,\n              name: \"Github →\",\n              href: \"https://github.com/Check-Data-Out/velog-dashboard-v2-fe\",\n            },\n            {\n              icon: <VelogDashboard className=\"w-[17px] h-[17px]\" />,\n              name: \"Service →\",\n              href: \"https://velog-dashboard.kro.kr/\",\n            },\n          ]}\n          sections={[\n            {\n              title: \"개요\",\n              content: (\n                <span className=\"leading-7 text-[16px]\">\n                  통계 기능이 부실한 Velog를 위한 게시물 통계 대시보드 서비스입니다.\n                  <br />\n                  간편 통계 조회 기능을 제공하고 있으며, 추후 통계 리더보드와 비교, 타 블로그\n                  서비스와의 연동을 준비할 계획입니다.\n                  <br />\n                  현재 <b>200+</b>명의 유저들이 서비스를 사용하고 있으며, <b>20000+</b>개의 게시물의\n                  통계를 관리하고 있습니다.\n                </span>\n              ),\n            },\n            {\n              title: \"기술 스택\",\n              content: (\n                <List\n                  contents={[\n                    \"**NextJS** - SEO 설정의 용이성, SSR을 통한 사용성 강화 등을 위해 선택\",\n                    \"**Google Analytics & Sentry** - 서비스 사용량 모니터링 및 버그의 빠른 탐지를 위해 선택\",\n                    \"**Jest & MSW** - 확장성이 높으며, 가장 범용적으로 쓰여 자료가 많았기 떄문에 선택\",\n                    \"**Tanstack-Query & Fetch** - Axios보다 커스텀이 쉬우며, NextJS과의 연동을 위해 선택\",\n                    \"**React-ChartJS-2** - 오래된 만큼 거대한 커뮤니티와 안정성의 보장을 위해 선택\",\n                  ]}\n                />\n              ),\n            },\n            {\n              title: \"기여\",\n              content: (\n                <List\n                  contents={[\n                    \"React 기반 확장 프로그램 개발\",\n                    \"협업 경험 개선\",\n                    [\"배포를 포함한 일부 개발 과정 문서화\", \"Discord 기반 화상 회의 도입\"],\n                    \"채널톡 도입\",\n                    [\n                      \"사용자의 제보를 통한 빠른 버그, 배포 주기 문제 수집\",\n                      \"다른 사용자가 경험하기 전 문제 해결 가능\",\n                    ],\n                  ]}\n                />\n              ),\n            },\n            {\n              title: \"트러블슈팅\",\n              content: (\n                <div className=\"flex flex-col gap-1\">\n                  <h3 className=\"font-semibold text-[18px]\">\n                    계정 변경 시, 새로고침하면 사라지는 이전 계정의 데이터 표시\n                  </h3>\n                  <List\n                    contents={[\n                      \"**원인**: NextJS의 Full-Route Cache 외에도 클라이언트에서 동작하는 RSC Router Cache가 있는데, 해당 캐시를 제거하지 않아 새로고침시 사라지는 이전 데이터가 표시됨\",\n                      \"**해결 방법**: NextJS의 서버 액션을 통해 revalidatePath 실행 후, redirect를 통해 로그인페이지로 이동시켜 해결\",\n                      \"**배운 점**: NextJS의 캐시 구조에 대해 배울 수 있었으며, 공식 문서를 더 세세하게 읽어보는 계기가 되었음\",\n                    ]}\n                  />\n                </div>\n              ),\n            },\n          ]}\n        ></Project>\n      </Section>\n      <Section title=\"활동 및 자격\" sliceInPrint>\n        <div className=\"flex flex-col gap-8\">\n          <span className=\"text-[26px] font-bold\">활동</span>\n          <TwoWayLayout\n            title=\"대덕SW마이스터고 교내 해커톤\"\n            date=\"2024. 07. 18 ~ 2024. 07. 20\"\n            tabs={[{ name: \"우수상(3위)\" }]}\n          >\n            <span className=\"w-full inline-block\">\n              정치에 무관심하거나, 정보가 부족한 사람들을 위한 정치 SNS 플랫폼인 YEOYA(여야)\n              서비스를 제작하였습니다.\n              <br /> 디자인과 프론트엔드 개발에 일부 참여하였으며, <b>우수상(3위)</b> 를\n              수상했습니다.\n            </span>\n          </TwoWayLayout>\n          <TwoWayLayout title=\"1일1코테\" date=\"2025. 01. 12 ~ ONGOING\">\n            <span className=\"w-full inline-block\">\n              코딩테스트 준비 목적과 함께 꾸준함을 만들기 위해, 매일 “백준 온라인 저지” 서비스에서\n              코딩테스트를 진행하고 있습니다.\n              <br /> 현재 <b>60일째</b> 진행중입니다.\n            </span>\n          </TwoWayLayout>\n          <span className=\"text-[26px] font-bold\">자격</span>\n          <TwoWayLayout title=\"TOEIC 810점\" date=\"2023. 08. 11\" tabs={[{ name: \"한국토익위원회\" }]}>\n            <span className=\"w-full inline-block\">\n              외국인과 일상 수준의 대화가 가능하며, 영어 문서를 이해하거나 수정할 수 있습니다.\n            </span>\n          </TwoWayLayout>\n          <TwoWayLayout\n            title=\"PCCE 748점 (LV. 2)\"\n            date=\"2024. 01. 05\"\n            tabs={[{ name: \"프로그래머스\" }]}\n          >\n            <span className=\"w-full inline-block\">\n              기초적인 알고리즘 및 자료구조 지식을 알고 있으며, 문제에 응용하여 적용할 수 있습니다.\n            </span>\n          </TwoWayLayout>\n          <TwoWayLayout\n            title=\"정보처리기능사\"\n            date=\"2023. 11. 19\"\n            tabs={[{ name: \"한국산업인력공단\" }]}\n          >\n            <span className=\"w-full inline-block\">\n              기본적인 컴퓨터 지식을 이해하고 있으며, 산업기능요원 신청시 활용할 수 있습니다.\n            </span>\n          </TwoWayLayout>\n        </div>\n      </Section>\n      <Section title=\"기술 스택\">\n        <Skillset\n          title=\"🖥️ ReactJS\"\n          contents={[\n            \"Zustand와 Context API를 통한 전역 상태관리를 사용할 수 있습니다.\",\n            \"Axios, Tanstack-Query를 통해 Rest 규칙을 준수하며 API를 사용해 본 경험이 있습니다.\",\n            \"React-Hook-Form, Zod를 통해 안정적인 유효성 검증 시스템을 구현해본 경험이 있습니다.\",\n          ]}\n        />\n        <Skillset\n          title=\"💻 NextJS\"\n          contents={[\n            \"Hydration 및 Tanstack-query를 통해 Prefetch를 제공하는 SSR 환경을 구축해 본 경험이 있습니다.\",\n            [\"NextJS의 Fetch Caching 및 Tanstack-Query의 관계에 대해 이해하고 있습니다.\"],\n            \"Middleware, Page/App router, Full-Stack API 등 NextJS 고유의 기능들을 이해하고 있습니다.\",\n            [\n              \"NextJS의 Router에 적용되는 캐시 정책을 이해하며, 응용해 본 경험이 있습니다\",\n              \"리디렉션 CORS 문제 해결을 위해 커스텀 서버를 제작해 본 경험이 있습니다\",\n            ],\n          ]}\n        />\n        <Skillset\n          title=\"🐙 Git & GitHub\"\n          contents={[\n            \"Branch, Merge, Rebase 등의 Git 개념을 이해하고 있습니다.\",\n            \"Branch, Merge, Rebase 등의 Git 개념을 이해하고 있습니다.\",\n            \"Pull Request를 통해 코드 리뷰를 받고, 진행해 본 경험이 있습니다. ![실제 경험 →](https://github.com/Check-Data-Out/velog-dashboard-v2-fe/pull/25)\",\n            \"Git Flow와 GIthub Flow의 차이점과 사용 방법을 이해하고 있습니다. ![학습 블로그 →](https://velog.io/@six-standard/브랜치-구조-깔끔하게-관리하기-플로우)\",\n          ]}\n        />\n        <Skillset\n          title=\"🍿 Other Stacks\"\n          contents={[\n            \"**React Native**\",\n            [\n              \"WebView의 장단점을 이해하고 있으며, 실제 사용 경험이 있습니다\",\n              \"Animated의 interpolate, timing 등을 통한 다크/라이트 모드, 토글 메뉴 등을 구현해 본 경험이 있습니다.\",\n            ],\n            \"**MonoRepo**\",\n            [\n              \"모노레포와 멀티레포의 차이점을 이해하고 있습니다.\",\n              \"Yarn Workspaces 기반 모노레포 형태의 개발 및 유지보수 경험이 있습니다.\",\n            ],\n          ]}\n        />\n      </Section>\n    </Layout>\n  );\n};\n\nexport const Head = () => <title>육기준</title>;\n\nexport default IndexPage;\n"],"names":["React","Sample","props","createElement","defaultProps","module","exports","default","Email","W","hasNativeLazyLoadSupport","HTMLImageElement","prototype","z","e","t","a","i","s","width","height","className","style","P","h","loading","shouldLoad","opacity","A","r","n","o","l","backgroundColor","position","top","left","bottom","right","objectFit","objectPosition","d","transition","H","F","_ref5","layout","paddingTop","maxWidth","display","alt","role","src","G","children","u","V","B","U","srcSet","decoding","Y","fallback","sources","sizes","length","map","_ref6","media","type","key","X","propTypes","isRequired","displayName","J","Z","Error","K","Q","ee","te","replace","ae","_len","arguments","Array","_key","c","apply","concat","ie","image","se","re","ne","Set","oe","le","de","as","class","g","onStartLoad","p","onLoad","m","onError","f","w","y","b","v","E","k","S","M","N","$","JSON","stringify","images","I","then","_ref7","renderImageToString","swapPlaceholderImage","current","querySelector","complete","wasCached","setTimeout","removeAttribute","addEventListener","removeEventListener","add","has","_ref8","innerHTML","isLoading","isLoaded","requestAnimationFrame","cancelAnimationFrame","ref","dangerouslySetInnerHTML","__html","suppressHydrationWarning","ce","he","ue","__imageData","__error","console","warn","ge","imgClassName","imgStyle","placeholder","pe","_len2","_key2","me","fe","we","Velogdashboard","Linkedin","Moon","Sun","Github","Velog","Repo","UPPERCASE","LOWERCASE","LEADING_CAPITAL","IDENTIFIER","SEPARATORS","LEADING_SEPARATORS","RegExp","source","SEPARATORS_AND_IDENTIFIER","NUMBERS_AND_IDENTIFIER","camelCase","input","options","isArray","TypeError","pascalCase","preserveConsecutiveUppercase","x","trim","filter","join","toLowerCase","locale","string","toLocaleLowerCase","toUpperCase","toLocaleUpperCase","isLastCharLower","isLastCharUpper","isLastLastCharUpper","character","test","slice","preserveCamelCase","lastIndex","m1","charAt","_","identifier","postProcess","Contacts","_ref","contents","_ref2","icon","href","content","Introduce","TwoWayLayout","title","date","tabs","name","action","onClick","Project","banner","links","sections","window","open","_ref3","Section","sliceInPrint","List","getChildren","items","Skillset","Layout","rest","Head","IndexPage","StaticImage","require","VelogDashboard","smallTitle"],"sourceRoot":""}